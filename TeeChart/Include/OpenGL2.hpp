// Borland C++ Builder
// Copyright (c) 1995, 2002 by Borland Software Corporation
// All rights reserved

// (DO NOT EDIT: machine generated header) 'OpenGL2.pas' rev: 6.00

#ifndef OpenGL2HPP
#define OpenGL2HPP

#pragma delphiheader begin
#pragma option push -w-
#pragma option push -Vx
#include <TeeGeometry.hpp>	// Pascal unit
#include <Windows.hpp>	// Pascal unit
#include <SysInit.hpp>	// Pascal unit
#include <System.hpp>	// Pascal unit

//-- user supplied -----------------------------------------------------------

namespace Opengl2
{
//-- type declarations -------------------------------------------------------
#pragma option push -b-
enum OpenGL2__1 { opDoubleBuffered, opGDI, opStereo };
#pragma option pop

typedef Set<OpenGL2__1, opDoubleBuffered, opStereo>  TRCOptions;

typedef unsigned GLenum;

typedef unsigned *PGLenum;

typedef Byte GLboolean;

typedef Byte *PGLboolean;

typedef unsigned GLbitfield;

typedef unsigned *PGLbitfield;

typedef Shortint GLbyte;

typedef Shortint *PGLbyte;

typedef short GLshort;

typedef short *PGLshort;

typedef int GLint;

typedef int *PGLint;

typedef int GLsizei;

typedef int *PGLsizei;

typedef Byte GLubyte;

typedef Byte *PGLubyte;

typedef Word GLushort;

typedef Word *PGLushort;

typedef unsigned GLuint;

typedef unsigned *PGLuint;

typedef float GLfloat;

typedef float *PGLfloat;

typedef float GLclampf;

typedef float *PGLclampf;

typedef double GLdouble;

typedef double *PGLdouble;

typedef double GLclampd;

typedef double *PGLclampd;

#pragma pack(push, 1)
struct TGLUNurbs
{
	
} ;
#pragma pack(pop)

#pragma pack(push, 1)
struct TGLUQuadric
{
	
} ;
#pragma pack(pop)

#pragma pack(push, 1)
struct TGLUTesselator
{
	
} ;
#pragma pack(pop)

typedef TGLUNurbs *PGLUNurbs;

typedef TGLUQuadric *PGLUQuadric;

typedef TGLUTesselator *PGLUTesselator;

typedef TGLUNurbs  TGLUNurbsObj;

typedef TGLUQuadric  TGLUQuadricObj;

typedef TGLUTesselator  TGLUTesselatorObj;

typedef TGLUTesselator  TGLUTriangulatorObj;

typedef TGLUNurbs *PGLUNurbsObj;

typedef TGLUQuadric *PGLUQuadricObj;

typedef TGLUTesselator *PGLUTesselatorObj;

typedef TGLUTesselator *PGLUTriangulatorObj;

typedef void __stdcall (*TGLUQuadricErrorProc)(unsigned errorCode);

typedef void __stdcall (*TGLUTessBeginProc)(unsigned AType);

typedef void __stdcall (*TGLUTessEdgeFlagProc)(Byte Flag);

typedef void __stdcall (*TGLUTessVertexProc)(void * VertexData);

typedef void __stdcall (*TGLUTessEndProc)(void);

typedef void __stdcall (*TGLUTessErrorProc)(unsigned ErrNo);

typedef void __stdcall (*TGLUTessCombineProc)(const double * Coords, const void * const * VertexData, const float * Weight, Teegeometry::PPointer OutData);

typedef void __stdcall (*TGLUTessBeginDataProc)(unsigned AType, void * UserData);

typedef void __stdcall (*TGLUTessEdgeFlagDataProc)(Byte Flag, void * UserData);

typedef void __stdcall (*TGLUTessVertexDataProc)(void * VertexData, void * UserData);

typedef void __stdcall (*TGLUTessEndDataProc)(void * UserData);

typedef void __stdcall (*TGLUTessErrorDataProc)(unsigned ErrNo, void * UserData);

typedef void __stdcall (*TGLUTessCombineDataProc)(const double * Coords, const void * const * VertexData, const float * Weight, Teegeometry::PPointer OutData, void * UserData);

typedef void __stdcall (*TGLUNurbsErrorProc)(unsigned ErrorCode);

struct TLayerPlaneDescriptor;
typedef TLayerPlaneDescriptor *PLayerPlaneDescriptor;

#pragma pack(push, 1)
struct TLayerPlaneDescriptor
{
	Word nSize;
	Word nVersion;
	int dwFlags;
	Byte iPixelType;
	Byte cColorBits;
	Byte cRedBits;
	Byte cRedShift;
	Byte cGreenBits;
	Byte cGreenShift;
	Byte cBlueBits;
	Byte cBlueShift;
	Byte cAlphaBits;
	Byte cAlphaShift;
	Byte cAccumBits;
	Byte cAccumRedBits;
	Byte cAccumGreenBits;
	Byte cAccumBlueBits;
	Byte cAccumAlphaBits;
	Byte cDepthBits;
	Byte cStencilBits;
	Byte cAuxBuffers;
	Byte iLayerPlane;
	Byte bReserved;
	int crTransparent;
} ;
#pragma pack(pop)

//-- var, const, procedure ---------------------------------------------------
extern PACKAGE bool GL_VERSION_1_0;
extern PACKAGE bool GL_VERSION_1_1;
extern PACKAGE bool GL_VERSION_1_2;
extern PACKAGE bool GLU_VERSION_1_1;
extern PACKAGE bool GLU_VERSION_1_2;
extern PACKAGE bool GL_EXT_abgr;
extern PACKAGE bool GL_EXT_bgra;
extern PACKAGE bool GL_EXT_packed_pixels;
extern PACKAGE bool GL_EXT_paletted_texture;
extern PACKAGE bool GL_EXT_vertex_array;
extern PACKAGE bool GL_SGI_compiled_vertex_array;
extern PACKAGE bool GL_SGI_cull_vertex;
extern PACKAGE bool GL_SGI_index_array_formats;
extern PACKAGE bool GL_SGI_index_func;
extern PACKAGE bool GL_SGI_index_material;
extern PACKAGE bool GL_SGI_index_texture;
extern PACKAGE bool GL_WIN_swap_hint;
extern PACKAGE bool GL_EXT_blend_color;
extern PACKAGE bool GL_EXT_blend_logic_op;
extern PACKAGE bool GL_EXT_blend_minmax;
extern PACKAGE bool GL_EXT_blend_subtract;
extern PACKAGE bool GL_EXT_convolution;
extern PACKAGE bool GL_EXT_copy_texture;
extern PACKAGE bool GL_EXT_histogram;
extern PACKAGE bool GL_EXT_polygon_offset;
extern PACKAGE bool GL_EXT_subtexture;
extern PACKAGE bool GL_EXT_texture;
extern PACKAGE bool GL_EXT_texture_object;
extern PACKAGE bool GL_EXT_texture3D;
extern PACKAGE bool GL_EXT_cmyka;
extern PACKAGE bool GL_EXT_rescale_normal;
extern PACKAGE bool GL_SGI_color_matrix;
extern PACKAGE bool GL_SGI_texture_color_table;
extern PACKAGE bool GL_SGI_color_table;
extern PACKAGE bool GL_EXT_clip_volume_hint;
extern PACKAGE bool GL_EXT_misc_attribute;
extern PACKAGE bool GL_EXT_scene_marker;
extern PACKAGE bool GL_EXT_shared_texture_palette;
extern PACKAGE bool GLU_EXT_TEXTURE;
extern PACKAGE bool GLU_EXT_object_space_tess;
extern PACKAGE bool GLU_EXT_nurbs_tessellator;
static const Shortint GL_CURRENT_BIT = 0x1;
static const Shortint GL_POINT_BIT = 0x2;
static const Shortint GL_LINE_BIT = 0x4;
static const Shortint GL_POLYGON_BIT = 0x8;
static const Shortint GL_POLYGON_STIPPLE_BIT = 0x10;
static const Shortint GL_PIXEL_MODE_BIT = 0x20;
static const Shortint GL_LIGHTING_BIT = 0x40;
static const Byte GL_FOG_BIT = 0x80;
static const Word GL_DEPTH_BUFFER_BIT = 0x100;
static const Word GL_ACCUM_BUFFER_BIT = 0x200;
static const Word GL_STENCIL_BUFFER_BIT = 0x400;
static const Word GL_VIEWPORT_BIT = 0x800;
static const Word GL_TRANSFORM_BIT = 0x1000;
static const Word GL_ENABLE_BIT = 0x2000;
static const Word GL_COLOR_BUFFER_BIT = 0x4000;
static const Word GL_HINT_BIT = 0x8000;
static const int GL_EVAL_BIT = 0x10000;
static const int GL_LIST_BIT = 0x20000;
static const int GL_TEXTURE_BIT = 0x40000;
static const int GL_SCISSOR_BIT = 0x80000;
static const int GL_ALL_ATTRIB_BITS = 0xfffff;
static const Shortint GL_CLIENT_PIXEL_STORE_BIT = 0x1;
static const Shortint GL_CLIENT_VERTEX_ARRAY_BIT = 0x2;
static const unsigned GL_CLIENT_ALL_ATTRIB_BITS = 0xffffffff;
static const Shortint GL_FALSE = 0x0;
static const Shortint GL_TRUE = 0x1;
static const Shortint GL_POINTS = 0x0;
static const Shortint GL_LINES = 0x1;
static const Shortint GL_LINE_LOOP = 0x2;
static const Shortint GL_LINE_STRIP = 0x3;
static const Shortint GL_TRIANGLES = 0x4;
static const Shortint GL_TRIANGLE_STRIP = 0x5;
static const Shortint GL_TRIANGLE_FAN = 0x6;
static const Shortint GL_QUADS = 0x7;
static const Shortint GL_QUAD_STRIP = 0x8;
static const Shortint GL_POLYGON = 0x9;
static const Word GL_ACCUM = 0x100;
static const Word GL_LOAD = 0x101;
static const Word GL_RETURN = 0x102;
static const Word GL_MULT = 0x103;
static const Word GL_ADD = 0x104;
static const Word GL_NEVER = 0x200;
static const Word GL_LESS = 0x201;
static const Word GL_EQUAL = 0x202;
static const Word GL_LEQUAL = 0x203;
static const Word GL_GREATER = 0x204;
static const Word GL_NOTEQUAL = 0x205;
static const Word GL_GEQUAL = 0x206;
static const Word GL_ALWAYS = 0x207;
static const Shortint GL_ZERO = 0x0;
static const Shortint GL_ONE = 0x1;
static const Word GL_SRC_COLOR = 0x300;
static const Word GL_ONE_MINUS_SRC_COLOR = 0x301;
static const Word GL_SRC_ALPHA = 0x302;
static const Word GL_ONE_MINUS_SRC_ALPHA = 0x303;
static const Word GL_DST_ALPHA = 0x304;
static const Word GL_ONE_MINUS_DST_ALPHA = 0x305;
static const Word GL_DST_COLOR = 0x306;
static const Word GL_ONE_MINUS_DST_COLOR = 0x307;
static const Word GL_SRC_ALPHA_SATURATE = 0x308;
static const Word GL_CONSTANT_COLOR = 0x8001;
static const Word GL_ONE_MINUS_CONSTANT_COLOR = 0x8002;
static const Word GL_CONSTANT_ALPHA = 0x8003;
static const Word GL_ONE_MINUS_CONSTANT_ALPHA = 0x8004;
static const Word GL_FUNC_ADD = 0x8006;
static const Word GL_MIN = 0x8007;
static const Word GL_MAX = 0x8008;
static const Word GL_FUNC_SUBTRACT = 0x800a;
static const Word GL_FUNC_REVERSE_SUBTRACT = 0x800b;
static const Word GL_COLOR_TABLE = 0x80d0;
static const Word GL_POST_CONVOLUTION_COLOR_TABLE = 0x80d1;
static const Word GL_POST_COLOR_MATRIX_COLOR_TABLE = 0x80d2;
static const Word GL_PROXY_COLOR_TABLE = 0x80d3;
static const Word GL_PROXY_POST_CONVOLUTION_COLOR_TABLE = 0x80d4;
static const Word GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE = 0x80d5;
static const Word GL_COLOR_TABLE_SCALE = 0x80d6;
static const Word GL_COLOR_TABLE_BIAS = 0x80d7;
static const Word GL_COLOR_TABLE_FORMAT = 0x80d8;
static const Word GL_COLOR_TABLE_WIDTH = 0x80d9;
static const Word GL_COLOR_TABLE_RED_SIZE = 0x80da;
static const Word GL_COLOR_TABLE_GREEN_SIZE = 0x80db;
static const Word GL_COLOR_TABLE_BLUE_SIZE = 0x80dc;
static const Word GL_COLOR_TABLE_ALPHA_SIZE = 0x80dd;
static const Word GL_COLOR_TABLE_LUMINANCE_SIZE = 0x80de;
static const Word GL_COLOR_TABLE_INTENSITY_SIZE = 0x80df;
static const Word GL_CONVOLUTION_1D = 0x8010;
static const Word GL_CONVOLUTION_2D = 0x8011;
static const Word GL_SEPARABLE_2D = 0x8012;
static const Word GL_CONVOLUTION_BORDER_MODE = 0x8013;
static const Word GL_CONVOLUTION_FILTER_SCALE = 0x8014;
static const Word GL_CONVOLUTION_FILTER_BIAS = 0x8015;
static const Word GL_REDUCE = 0x8016;
static const Word GL_CONVOLUTION_FORMAT = 0x8017;
static const Word GL_CONVOLUTION_WIDTH = 0x8018;
static const Word GL_CONVOLUTION_HEIGHT = 0x8019;
static const Word GL_MAX_CONVOLUTION_WIDTH = 0x801a;
static const Word GL_MAX_CONVOLUTION_HEIGHT = 0x801b;
static const Word GL_POST_CONVOLUTION_RED_SCALE = 0x801c;
static const Word GL_POST_CONVOLUTION_GREEN_SCALE = 0x801d;
static const Word GL_POST_CONVOLUTION_BLUE_SCALE = 0x801e;
static const Word GL_POST_CONVOLUTION_ALPHA_SCALE = 0x801f;
static const Word GL_POST_CONVOLUTION_RED_BIAS = 0x8020;
static const Word GL_POST_CONVOLUTION_GREEN_BIAS = 0x8021;
static const Word GL_POST_CONVOLUTION_BLUE_BIAS = 0x8022;
static const Word GL_POST_CONVOLUTION_ALPHA_BIAS = 0x8023;
static const Word GL_HISTOGRAM = 0x8024;
static const Word GL_PROXY_HISTOGRAM = 0x8025;
static const Word GL_HISTOGRAM_WIDTH = 0x8026;
static const Word GL_HISTOGRAM_FORMAT = 0x8027;
static const Word GL_HISTOGRAM_RED_SIZE = 0x8028;
static const Word GL_HISTOGRAM_GREEN_SIZE = 0x8029;
static const Word GL_HISTOGRAM_BLUE_SIZE = 0x802a;
static const Word GL_HISTOGRAM_ALPHA_SIZE = 0x802b;
static const Word GL_HISTOGRAM_LUMINANCE_SIZE = 0x802c;
static const Word GL_HISTOGRAM_SINK = 0x802d;
static const Word GL_MINMAX = 0x802e;
static const Word GL_MINMAX_FORMAT = 0x802f;
static const Word GL_MINMAX_SINK = 0x8030;
static const Shortint GL_NONE = 0x0;
static const Word GL_FRONT_LEFT = 0x400;
static const Word GL_FRONT_RIGHT = 0x401;
static const Word GL_BACK_LEFT = 0x402;
static const Word GL_BACK_RIGHT = 0x403;
static const Word GL_FRONT = 0x404;
static const Word GL_BACK = 0x405;
static const Word GL_LEFT = 0x406;
static const Word GL_RIGHT = 0x407;
static const Word GL_FRONT_AND_BACK = 0x408;
static const Word GL_AUX0 = 0x409;
static const Word GL_AUX1 = 0x40a;
static const Word GL_AUX2 = 0x40b;
static const Word GL_AUX3 = 0x40c;
static const Shortint GL_NO_ERROR = 0x0;
static const Word GL_INVALID_ENUM = 0x500;
static const Word GL_INVALID_VALUE = 0x501;
static const Word GL_INVALID_OPERATION = 0x502;
static const Word GL_STACK_OVERFLOW = 0x503;
static const Word GL_STACK_UNDERFLOW = 0x504;
static const Word GL_OUT_OF_MEMORY = 0x505;
static const Word GL_2D = 0x600;
static const Word GL_3D = 0x601;
static const Word GL_3D_COLOR = 0x602;
static const Word GL_3D_COLOR_TEXTURE = 0x603;
static const Word GL_4D_COLOR_TEXTURE = 0x604;
static const Word GL_PASS_THROUGH_TOKEN = 0x700;
static const Word GL_POINT_TOKEN = 0x701;
static const Word GL_LINE_TOKEN = 0x702;
static const Word GL_POLYGON_TOKEN = 0x703;
static const Word GL_BITMAP_TOKEN = 0x704;
static const Word GL_DRAW_PIXEL_TOKEN = 0x705;
static const Word GL_COPY_PIXEL_TOKEN = 0x706;
static const Word GL_LINE_RESET_TOKEN = 0x707;
static const Word GL_EXP = 0x800;
static const Word GL_EXP2 = 0x801;
static const Word GL_CW = 0x900;
static const Word GL_CCW = 0x901;
static const Word GL_COEFF = 0xa00;
static const Word GL_ORDER = 0xa01;
static const Word GL_DOMAIN = 0xa02;
static const Word GL_PIXEL_MAP_I_TO_I = 0xc70;
static const Word GL_PIXEL_MAP_S_TO_S = 0xc71;
static const Word GL_PIXEL_MAP_I_TO_R = 0xc72;
static const Word GL_PIXEL_MAP_I_TO_G = 0xc73;
static const Word GL_PIXEL_MAP_I_TO_B = 0xc74;
static const Word GL_PIXEL_MAP_I_TO_A = 0xc75;
static const Word GL_PIXEL_MAP_R_TO_R = 0xc76;
static const Word GL_PIXEL_MAP_G_TO_G = 0xc77;
static const Word GL_PIXEL_MAP_B_TO_B = 0xc78;
static const Word GL_PIXEL_MAP_A_TO_A = 0xc79;
static const Word GL_VERTEX_ARRAY_POINTER = 0x808e;
static const Word GL_NORMAL_ARRAY_POINTER = 0x808f;
static const Word GL_COLOR_ARRAY_POINTER = 0x8090;
static const Word GL_INDEX_ARRAY_POINTER = 0x8091;
static const Word GL_TEXTURE_COORD_ARRAY_POINTER = 0x8092;
static const Word GL_EDGE_FLAG_ARRAY_POINTER = 0x8093;
static const Word GL_CURRENT_COLOR = 0xb00;
static const Word GL_CURRENT_INDEX = 0xb01;
static const Word GL_CURRENT_NORMAL = 0xb02;
static const Word GL_CURRENT_TEXTURE_COORDS = 0xb03;
static const Word GL_CURRENT_RASTER_COLOR = 0xb04;
static const Word GL_CURRENT_RASTER_INDEX = 0xb05;
static const Word GL_CURRENT_RASTER_TEXTURE_COORDS = 0xb06;
static const Word GL_CURRENT_RASTER_POSITION = 0xb07;
static const Word GL_CURRENT_RASTER_POSITION_VALID = 0xb08;
static const Word GL_CURRENT_RASTER_DISTANCE = 0xb09;
static const Word GL_POINT_SMOOTH = 0xb10;
static const Word GL_POINT_SIZE = 0xb11;
static const Word GL_POINT_SIZE_RANGE = 0xb12;
static const Word GL_POINT_SIZE_GRANULARITY = 0xb13;
static const Word GL_LINE_SMOOTH = 0xb20;
static const Word GL_LINE_WIDTH = 0xb21;
static const Word GL_LINE_WIDTH_RANGE = 0xb22;
static const Word GL_LINE_WIDTH_GRANULARITY = 0xb23;
static const Word GL_LINE_STIPPLE = 0xb24;
static const Word GL_LINE_STIPPLE_PATTERN = 0xb25;
static const Word GL_LINE_STIPPLE_REPEAT = 0xb26;
static const Word GL_LIST_MODE = 0xb30;
static const Word GL_MAX_LIST_NESTING = 0xb31;
static const Word GL_LIST_BASE = 0xb32;
static const Word GL_LIST_INDEX = 0xb33;
static const Word GL_POLYGON_MODE = 0xb40;
static const Word GL_POLYGON_SMOOTH = 0xb41;
static const Word GL_POLYGON_STIPPLE = 0xb42;
static const Word GL_EDGE_FLAG = 0xb43;
static const Word GL_CULL_FACE = 0xb44;
static const Word GL_CULL_FACE_MODE = 0xb45;
static const Word GL_FRONT_FACE = 0xb46;
static const Word GL_LIGHTING = 0xb50;
static const Word GL_LIGHT_MODEL_LOCAL_VIEWER = 0xb51;
static const Word GL_LIGHT_MODEL_TWO_SIDE = 0xb52;
static const Word GL_LIGHT_MODEL_AMBIENT = 0xb53;
static const Word GL_LIGHT_MODEL_COLOR_CONTROL = 0x81f8;
static const Word GL_SINGLE_COLOR = 0x81f9;
static const Word GL_SEPARATE_SPECULAR_COLOR = 0x81fa;
static const Word GL_SHADE_MODEL = 0xb54;
static const Word GL_COLOR_MATERIAL_FACE = 0xb55;
static const Word GL_COLOR_MATERIAL_PARAMETER = 0xb56;
static const Word GL_COLOR_MATERIAL = 0xb57;
static const Word GL_FOG = 0xb60;
static const Word GL_FOG_INDEX = 0xb61;
static const Word GL_FOG_DENSITY = 0xb62;
static const Word GL_FOG_START = 0xb63;
static const Word GL_FOG_END = 0xb64;
static const Word GL_FOG_MODE = 0xb65;
static const Word GL_FOG_COLOR = 0xb66;
static const Word GL_DEPTH_RANGE = 0xb70;
static const Word GL_DEPTH_TEST = 0xb71;
static const Word GL_DEPTH_WRITEMASK = 0xb72;
static const Word GL_DEPTH_CLEAR_VALUE = 0xb73;
static const Word GL_DEPTH_FUNC = 0xb74;
static const Word GL_ACCUM_CLEAR_VALUE = 0xb80;
static const Word GL_STENCIL_TEST = 0xb90;
static const Word GL_STENCIL_CLEAR_VALUE = 0xb91;
static const Word GL_STENCIL_FUNC = 0xb92;
static const Word GL_STENCIL_VALUE_MASK = 0xb93;
static const Word GL_STENCIL_FAIL = 0xb94;
static const Word GL_STENCIL_PASS_DEPTH_FAIL = 0xb95;
static const Word GL_STENCIL_PASS_DEPTH_PASS = 0xb96;
static const Word GL_STENCIL_REF = 0xb97;
static const Word GL_STENCIL_WRITEMASK = 0xb98;
static const Word GL_MATRIX_MODE = 0xba0;
static const Word GL_NORMALIZE = 0xba1;
static const Word GL_VIEWPORT = 0xba2;
static const Word GL_MODELVIEW_STACK_DEPTH = 0xba3;
static const Word GL_PROJECTION_STACK_DEPTH = 0xba4;
static const Word GL_TEXTURE_STACK_DEPTH = 0xba5;
static const Word GL_MODELVIEW_MATRIX = 0xba6;
static const Word GL_PROJECTION_MATRIX = 0xba7;
static const Word GL_TEXTURE_MATRIX = 0xba8;
static const Word GL_ATTRIB_STACK_DEPTH = 0xbb0;
static const Word GL_CLIENT_ATTRIB_STACK_DEPTH = 0xbb1;
static const Word GL_ALPHA_TEST = 0xbc0;
static const Word GL_ALPHA_TEST_FUNC = 0xbc1;
static const Word GL_ALPHA_TEST_REF = 0xbc2;
static const Word GL_DITHER = 0xbd0;
static const Word GL_BLEND_DST = 0xbe0;
static const Word GL_BLEND_SRC = 0xbe1;
static const Word GL_BLEND = 0xbe2;
static const Word GL_BLEND_COLOR = 0x8005;
static const Word GL_LOGIC_OP_MODE = 0xbf0;
static const Word GL_INDEX_LOGIC_OP = 0xbf1;
static const Word GL_LOGIC_OP = 0xbf1;
static const Word GL_COLOR_LOGIC_OP = 0xbf2;
static const Word GL_AUX_BUFFERS = 0xc00;
static const Word GL_DRAW_BUFFER = 0xc01;
static const Word GL_READ_BUFFER = 0xc02;
static const Word GL_SCISSOR_BOX = 0xc10;
static const Word GL_SCISSOR_TEST = 0xc11;
static const Word GL_INDEX_CLEAR_VALUE = 0xc20;
static const Word GL_INDEX_WRITEMASK = 0xc21;
static const Word GL_COLOR_CLEAR_VALUE = 0xc22;
static const Word GL_COLOR_WRITEMASK = 0xc23;
static const Word GL_INDEX_MODE = 0xc30;
static const Word GL_RGBA_MODE = 0xc31;
static const Word GL_DOUBLEBUFFER = 0xc32;
static const Word GL_STEREO = 0xc33;
static const Word GL_RENDER_MODE = 0xc40;
static const Word GL_PERSPECTIVE_CORRECTION_HINT = 0xc50;
static const Word GL_POINT_SMOOTH_HINT = 0xc51;
static const Word GL_LINE_SMOOTH_HINT = 0xc52;
static const Word GL_POLYGON_SMOOTH_HINT = 0xc53;
static const Word GL_FOG_HINT = 0xc54;
static const Word GL_TEXTURE_GEN_S = 0xc60;
static const Word GL_TEXTURE_GEN_T = 0xc61;
static const Word GL_TEXTURE_GEN_R = 0xc62;
static const Word GL_TEXTURE_GEN_Q = 0xc63;
static const Word GL_PIXEL_MAP_I_TO_I_SIZE = 0xcb0;
static const Word GL_PIXEL_MAP_S_TO_S_SIZE = 0xcb1;
static const Word GL_PIXEL_MAP_I_TO_R_SIZE = 0xcb2;
static const Word GL_PIXEL_MAP_I_TO_G_SIZE = 0xcb3;
static const Word GL_PIXEL_MAP_I_TO_B_SIZE = 0xcb4;
static const Word GL_PIXEL_MAP_I_TO_A_SIZE = 0xcb5;
static const Word GL_PIXEL_MAP_R_TO_R_SIZE = 0xcb6;
static const Word GL_PIXEL_MAP_G_TO_G_SIZE = 0xcb7;
static const Word GL_PIXEL_MAP_B_TO_B_SIZE = 0xcb8;
static const Word GL_PIXEL_MAP_A_TO_A_SIZE = 0xcb9;
static const Word GL_UNPACK_SWAP_BYTES = 0xcf0;
static const Word GL_UNPACK_LSB_FIRST = 0xcf1;
static const Word GL_UNPACK_ROW_LENGTH = 0xcf2;
static const Word GL_UNPACK_SKIP_ROWS = 0xcf3;
static const Word GL_UNPACK_SKIP_PIXELS = 0xcf4;
static const Word GL_UNPACK_ALIGNMENT = 0xcf5;
static const Word GL_PACK_SWAP_BYTES = 0xd00;
static const Word GL_PACK_LSB_FIRST = 0xd01;
static const Word GL_PACK_ROW_LENGTH = 0xd02;
static const Word GL_PACK_SKIP_ROWS = 0xd03;
static const Word GL_PACK_SKIP_PIXELS = 0xd04;
static const Word GL_PACK_ALIGNMENT = 0xd05;
static const Word GL_PACK_SKIP_IMAGES = 0x806b;
static const Word GL_PACK_IMAGE_HEIGHT = 0x806c;
static const Word GL_UNPACK_SKIP_IMAGES = 0x806d;
static const Word GL_UNPACK_IMAGE_HEIGHT = 0x806e;
static const Word GL_MAP_COLOR = 0xd10;
static const Word GL_MAP_STENCIL = 0xd11;
static const Word GL_INDEX_SHIFT = 0xd12;
static const Word GL_INDEX_OFFSET = 0xd13;
static const Word GL_RED_SCALE = 0xd14;
static const Word GL_RED_BIAS = 0xd15;
static const Word GL_ZOOM_X = 0xd16;
static const Word GL_ZOOM_Y = 0xd17;
static const Word GL_GREEN_SCALE = 0xd18;
static const Word GL_GREEN_BIAS = 0xd19;
static const Word GL_BLUE_SCALE = 0xd1a;
static const Word GL_BLUE_BIAS = 0xd1b;
static const Word GL_ALPHA_SCALE = 0xd1c;
static const Word GL_ALPHA_BIAS = 0xd1d;
static const Word GL_DEPTH_SCALE = 0xd1e;
static const Word GL_DEPTH_BIAS = 0xd1f;
static const Word GL_MAX_EVAL_ORDER = 0xd30;
static const Word GL_MAX_LIGHTS = 0xd31;
static const Word GL_MAX_CLIP_PLANES = 0xd32;
static const Word GL_MAX_TEXTURE_SIZE = 0xd33;
static const Word GL_MAX_3D_TEXTURE_SIZE = 0x8073;
static const Word GL_MAX_PIXEL_MAP_TABLE = 0xd34;
static const Word GL_MAX_ATTRIB_STACK_DEPTH = 0xd35;
static const Word GL_MAX_MODELVIEW_STACK_DEPTH = 0xd36;
static const Word GL_MAX_NAME_STACK_DEPTH = 0xd37;
static const Word GL_MAX_PROJECTION_STACK_DEPTH = 0xd38;
static const Word GL_MAX_TEXTURE_STACK_DEPTH = 0xd39;
static const Word GL_MAX_VIEWPORT_DIMS = 0xd3a;
static const Word GL_MAX_CLIENT_ATTRIB_STACK_DEPTH = 0xd3b;
static const Word GL_SUBPIXEL_BITS = 0xd50;
static const Word GL_INDEX_BITS = 0xd51;
static const Word GL_RED_BITS = 0xd52;
static const Word GL_GREEN_BITS = 0xd53;
static const Word GL_BLUE_BITS = 0xd54;
static const Word GL_ALPHA_BITS = 0xd55;
static const Word GL_DEPTH_BITS = 0xd56;
static const Word GL_STENCIL_BITS = 0xd57;
static const Word GL_ACCUM_RED_BITS = 0xd58;
static const Word GL_ACCUM_GREEN_BITS = 0xd59;
static const Word GL_ACCUM_BLUE_BITS = 0xd5a;
static const Word GL_ACCUM_ALPHA_BITS = 0xd5b;
static const Word GL_NAME_STACK_DEPTH = 0xd70;
static const Word GL_AUTO_NORMAL = 0xd80;
static const Word GL_MAP1_COLOR_4 = 0xd90;
static const Word GL_MAP1_INDEX = 0xd91;
static const Word GL_MAP1_NORMAL = 0xd92;
static const Word GL_MAP1_TEXTURE_COORD_1 = 0xd93;
static const Word GL_MAP1_TEXTURE_COORD_2 = 0xd94;
static const Word GL_MAP1_TEXTURE_COORD_3 = 0xd95;
static const Word GL_MAP1_TEXTURE_COORD_4 = 0xd96;
static const Word GL_MAP1_VERTEX_3 = 0xd97;
static const Word GL_MAP1_VERTEX_4 = 0xd98;
static const Word GL_MAP2_COLOR_4 = 0xdb0;
static const Word GL_MAP2_INDEX = 0xdb1;
static const Word GL_MAP2_NORMAL = 0xdb2;
static const Word GL_MAP2_TEXTURE_COORD_1 = 0xdb3;
static const Word GL_MAP2_TEXTURE_COORD_2 = 0xdb4;
static const Word GL_MAP2_TEXTURE_COORD_3 = 0xdb5;
static const Word GL_MAP2_TEXTURE_COORD_4 = 0xdb6;
static const Word GL_MAP2_VERTEX_3 = 0xdb7;
static const Word GL_MAP2_VERTEX_4 = 0xdb8;
static const Word GL_MAP1_GRID_DOMAIN = 0xdd0;
static const Word GL_MAP1_GRID_SEGMENTS = 0xdd1;
static const Word GL_MAP2_GRID_DOMAIN = 0xdd2;
static const Word GL_MAP2_GRID_SEGMENTS = 0xdd3;
static const Word GL_TEXTURE_1D = 0xde0;
static const Word GL_TEXTURE_2D = 0xde1;
static const Word GL_TEXTURE_3D = 0x806f;
static const Word GL_FEEDBACK_BUFFER_POINTER = 0xdf0;
static const Word GL_FEEDBACK_BUFFER_SIZE = 0xdf1;
static const Word GL_FEEDBACK_BUFFER_TYPE = 0xdf2;
static const Word GL_SELECTION_BUFFER_POINTER = 0xdf3;
static const Word GL_SELECTION_BUFFER_SIZE = 0xdf4;
static const Word GL_POLYGON_OFFSET_UNITS = 0x2a00;
static const Word GL_POLYGON_OFFSET_POINT = 0x2a01;
static const Word GL_POLYGON_OFFSET_LINE = 0x2a02;
static const Word GL_POLYGON_OFFSET_FILL = 0x8037;
static const Word GL_POLYGON_OFFSET_FACTOR = 0x8038;
static const Word GL_TEXTURE_BINDING_1D = 0x8068;
static const Word GL_TEXTURE_BINDING_2D = 0x8069;
static const Word GL_VERTEX_ARRAY = 0x8074;
static const Word GL_NORMAL_ARRAY = 0x8075;
static const Word GL_COLOR_ARRAY = 0x8076;
static const Word GL_INDEX_ARRAY = 0x8077;
static const Word GL_TEXTURE_COORD_ARRAY = 0x8078;
static const Word GL_EDGE_FLAG_ARRAY = 0x8079;
static const Word GL_VERTEX_ARRAY_SIZE = 0x807a;
static const Word GL_VERTEX_ARRAY_TYPE = 0x807b;
static const Word GL_VERTEX_ARRAY_STRIDE = 0x807c;
static const Word GL_NORMAL_ARRAY_TYPE = 0x807e;
static const Word GL_NORMAL_ARRAY_STRIDE = 0x807f;
static const Word GL_COLOR_ARRAY_SIZE = 0x8081;
static const Word GL_COLOR_ARRAY_TYPE = 0x8082;
static const Word GL_COLOR_ARRAY_STRIDE = 0x8083;
static const Word GL_INDEX_ARRAY_TYPE = 0x8085;
static const Word GL_INDEX_ARRAY_STRIDE = 0x8086;
static const Word GL_TEXTURE_COORD_ARRAY_SIZE = 0x8088;
static const Word GL_TEXTURE_COORD_ARRAY_TYPE = 0x8089;
static const Word GL_TEXTURE_COORD_ARRAY_STRIDE = 0x808a;
static const Word GL_EDGE_FLAG_ARRAY_STRIDE = 0x808c;
static const Word GL_COLOR_MATRIX = 0x80b1;
static const Word GL_COLOR_MATRIX_STACK_DEPTH = 0x80b2;
static const Word GL_MAX_COLOR_MATRIX_STACK_DEPTH = 0x80b3;
static const Word GL_POST_COLOR_MATRIX_RED_SCALE = 0x80b4;
static const Word GL_POST_COLOR_MATRIX_GREEN_SCALE = 0x80b5;
static const Word GL_POST_COLOR_MATRIX_BLUE_SCALE = 0x80b6;
static const Word GL_POST_COLOR_MATRIX_ALPHA_SCALE = 0x80b7;
static const Word GL_POST_COLOR_MATRIX_RED_BIAS = 0x80b8;
static const Word GL_POST_COLOR_MATRIX_GREEN_BIAS = 0x80b9;
static const Word GL_POST_COLOR_MATRIX_BLUE_BIAS = 0x80ba;
static const Word GL_POST_COLOR_MATRIX_ALPHA_BIAS = 0x80bb;
static const Word GL_TEXTURE_WIDTH = 0x1000;
static const Word GL_TEXTURE_HEIGHT = 0x1001;
static const Word GL_TEXTURE_INTERNAL_FORMAT = 0x1003;
static const Word GL_TEXTURE_COMPONENTS = 0x1003;
static const Word GL_TEXTURE_BORDER_COLOR = 0x1004;
static const Word GL_TEXTURE_BORDER = 0x1005;
static const Word GL_TEXTURE_RED_SIZE = 0x805c;
static const Word GL_TEXTURE_GREEN_SIZE = 0x805d;
static const Word GL_TEXTURE_BLUE_SIZE = 0x805e;
static const Word GL_TEXTURE_ALPHA_SIZE = 0x805f;
static const Word GL_TEXTURE_LUMINANCE_SIZE = 0x8060;
static const Word GL_TEXTURE_INTENSITY_SIZE = 0x8061;
static const Word GL_TEXTURE_PRIORITY = 0x8066;
static const Word GL_TEXTURE_RESIDENT = 0x8067;
static const Word GL_BGR = 0x80e0;
static const Word GL_BGRA = 0x80e1;
static const Word GL_DONT_CARE = 0x1100;
static const Word GL_FASTEST = 0x1101;
static const Word GL_NICEST = 0x1102;
static const Word GL_AMBIENT = 0x1200;
static const Word GL_DIFFUSE = 0x1201;
static const Word GL_SPECULAR = 0x1202;
static const Word GL_POSITION = 0x1203;
static const Word GL_SPOT_DIRECTION = 0x1204;
static const Word GL_SPOT_EXPONENT = 0x1205;
static const Word GL_SPOT_CUTOFF = 0x1206;
static const Word GL_CONSTANT_ATTENUATION = 0x1207;
static const Word GL_LINEAR_ATTENUATION = 0x1208;
static const Word GL_QUADRATIC_ATTENUATION = 0x1209;
static const Word GL_COMPILE = 0x1300;
static const Word GL_COMPILE_AND_EXECUTE = 0x1301;
static const Word GL_BYTE = 0x1400;
static const Word GL_UNSIGNED_BYTE = 0x1401;
static const Word GL_SHORT = 0x1402;
static const Word GL_UNSIGNED_SHORT = 0x1403;
static const Word GL_INT = 0x1404;
static const Word GL_UNSIGNED_INT = 0x1405;
static const Word GL_FLOAT = 0x1406;
static const Word GL_2_BYTES = 0x1407;
static const Word GL_3_BYTES = 0x1408;
static const Word GL_4_BYTES = 0x1409;
static const Word GL_DOUBLE = 0x140a;
static const Word GL_DOUBLE_EXT = 0x140a;
static const Word GL_CLEAR = 0x1500;
static const Word GL_AND = 0x1501;
static const Word GL_AND_REVERSE = 0x1502;
static const Word GL_COPY = 0x1503;
static const Word GL_AND_INVERTED = 0x1504;
static const Word GL_NOOP = 0x1505;
static const Word GL_XOR = 0x1506;
static const Word GL_OR = 0x1507;
static const Word GL_NOR = 0x1508;
static const Word GL_EQUIV = 0x1509;
static const Word GL_INVERT = 0x150a;
static const Word GL_OR_REVERSE = 0x150b;
static const Word GL_COPY_INVERTED = 0x150c;
static const Word GL_OR_INVERTED = 0x150d;
static const Word GL_NAND = 0x150e;
static const Word GL_SET = 0x150f;
static const Word GL_EMISSION = 0x1600;
static const Word GL_SHININESS = 0x1601;
static const Word GL_AMBIENT_AND_DIFFUSE = 0x1602;
static const Word GL_COLOR_INDEXES = 0x1603;
static const Word GL_MODELVIEW = 0x1700;
static const Word GL_PROJECTION = 0x1701;
static const Word GL_TEXTURE = 0x1702;
static const Word GL_COLOR = 0x1800;
static const Word GL_DEPTH = 0x1801;
static const Word GL_STENCIL = 0x1802;
static const Word GL_COLOR_INDEX = 0x1900;
static const Word GL_STENCIL_INDEX = 0x1901;
static const Word GL_DEPTH_COMPONENT = 0x1902;
static const Word GL_RED = 0x1903;
static const Word GL_GREEN = 0x1904;
static const Word GL_BLUE = 0x1905;
static const Word GL_ALPHA = 0x1906;
static const Word GL_RGB = 0x1907;
static const Word GL_RGBA = 0x1908;
static const Word GL_LUMINANCE = 0x1909;
static const Word GL_LUMINANCE_ALPHA = 0x190a;
static const Word GL_BITMAP = 0x1a00;
static const Word GL_POINT = 0x1b00;
static const Word GL_LINE = 0x1b01;
static const Word GL_FILL = 0x1b02;
static const Word GL_RENDER = 0x1c00;
static const Word GL_FEEDBACK = 0x1c01;
static const Word GL_SELECT = 0x1c02;
static const Word GL_FLAT = 0x1d00;
static const Word GL_SMOOTH = 0x1d01;
static const Word GL_KEEP = 0x1e00;
static const Word GL_REPLACE = 0x1e01;
static const Word GL_INCR = 0x1e02;
static const Word GL_DECR = 0x1e03;
static const Word GL_VENDOR = 0x1f00;
static const Word GL_RENDERER = 0x1f01;
static const Word GL_VERSION = 0x1f02;
static const Word GL_EXTENSIONS = 0x1f03;
static const Word GL_S = 0x2000;
static const Word GL_T = 0x2001;
static const Word GL_R = 0x2002;
static const Word GL_Q = 0x2003;
static const Word GL_MODULATE = 0x2100;
static const Word GL_DECAL = 0x2101;
static const Word GL_TEXTURE_ENV_MODE = 0x2200;
static const Word GL_TEXTURE_ENV_COLOR = 0x2201;
static const Word GL_TEXTURE_ENV = 0x2300;
static const Word GL_EYE_LINEAR = 0x2400;
static const Word GL_OBJECT_LINEAR = 0x2401;
static const Word GL_SPHERE_MAP = 0x2402;
static const Word GL_TEXTURE_GEN_MODE = 0x2500;
static const Word GL_OBJECT_PLANE = 0x2501;
static const Word GL_EYE_PLANE = 0x2502;
static const Word GL_NEAREST = 0x2600;
static const Word GL_LINEAR = 0x2601;
static const Word GL_NEAREST_MIPMAP_NEAREST = 0x2700;
static const Word GL_LINEAR_MIPMAP_NEAREST = 0x2701;
static const Word GL_NEAREST_MIPMAP_LINEAR = 0x2702;
static const Word GL_LINEAR_MIPMAP_LINEAR = 0x2703;
static const Word GL_TEXTURE_MAG_FILTER = 0x2800;
static const Word GL_TEXTURE_MIN_FILTER = 0x2801;
static const Word GL_TEXTURE_WRAP_R = 0x8072;
static const Word GL_TEXTURE_WRAP_S = 0x2802;
static const Word GL_TEXTURE_WRAP_T = 0x2803;
static const Word GL_CLAMP_TO_EDGE = 0x812f;
static const Word GL_TEXTURE_MIN_LOD = 0x813a;
static const Word GL_TEXTURE_MAX_LOD = 0x813b;
static const Word GL_TEXTURE_BASE_LEVEL = 0x813c;
static const Word GL_TEXTURE_MAX_LEVEL = 0x813d;
static const Word GL_TEXTURE_DEPTH = 0x8071;
static const Word GL_PROXY_TEXTURE_1D = 0x8063;
static const Word GL_PROXY_TEXTURE_2D = 0x8064;
static const Word GL_PROXY_TEXTURE_3D = 0x8070;
static const Word GL_CLAMP = 0x2900;
static const Word GL_REPEAT = 0x2901;
static const Word GL_R3_G3_B2 = 0x2a10;
static const Word GL_ALPHA4 = 0x803b;
static const Word GL_ALPHA8 = 0x803c;
static const Word GL_ALPHA12 = 0x803d;
static const Word GL_ALPHA16 = 0x803e;
static const Word GL_LUMINANCE4 = 0x803f;
static const Word GL_LUMINANCE8 = 0x8040;
static const Word GL_LUMINANCE12 = 0x8041;
static const Word GL_LUMINANCE16 = 0x8042;
static const Word GL_LUMINANCE4_ALPHA4 = 0x8043;
static const Word GL_LUMINANCE6_ALPHA2 = 0x8044;
static const Word GL_LUMINANCE8_ALPHA8 = 0x8045;
static const Word GL_LUMINANCE12_ALPHA4 = 0x8046;
static const Word GL_LUMINANCE12_ALPHA12 = 0x8047;
static const Word GL_LUMINANCE16_ALPHA16 = 0x8048;
static const Word GL_INTENSITY = 0x8049;
static const Word GL_INTENSITY4 = 0x804a;
static const Word GL_INTENSITY8 = 0x804b;
static const Word GL_INTENSITY12 = 0x804c;
static const Word GL_INTENSITY16 = 0x804d;
static const Word GL_RGB4 = 0x804f;
static const Word GL_RGB5 = 0x8050;
static const Word GL_RGB8 = 0x8051;
static const Word GL_RGB10 = 0x8052;
static const Word GL_RGB12 = 0x8053;
static const Word GL_RGB16 = 0x8054;
static const Word GL_RGBA2 = 0x8055;
static const Word GL_RGBA4 = 0x8056;
static const Word GL_RGB5_A1 = 0x8057;
static const Word GL_RGBA8 = 0x8058;
static const Word GL_RGB10_A2 = 0x8059;
static const Word GL_RGBA12 = 0x805a;
static const Word GL_RGBA16 = 0x805b;
static const Word UNSIGNED_BYTE_3_3_2 = 0x8032;
static const Word UNSIGNED_BYTE_2_3_3_REV = 0x8362;
static const Word UNSIGNED_SHORT_5_6_5 = 0x8363;
static const Word UNSIGNED_SHORT_5_6_5_REV = 0x8364;
static const Word UNSIGNED_SHORT_4_4_4_4 = 0x8033;
static const Word UNSIGNED_SHORT_4_4_4_4_REV = 0x8365;
static const Word UNSIGNED_SHORT_5_5_5_1 = 0x8034;
static const Word UNSIGNED_SHORT_1_5_5_5_REV = 0x8366;
static const Word UNSIGNED_INT_8_8_8_8 = 0x8035;
static const Word UNSIGNED_INT_8_8_8_8_REV = 0x8367;
static const Word UNSIGNED_INT_10_10_10_2 = 0x8036;
static const Word UNSIGNED_INT_2_10_10_10_REV = 0x8368;
static const Word GL_V2F = 0x2a20;
static const Word GL_V3F = 0x2a21;
static const Word GL_C4UB_V2F = 0x2a22;
static const Word GL_C4UB_V3F = 0x2a23;
static const Word GL_C3F_V3F = 0x2a24;
static const Word GL_N3F_V3F = 0x2a25;
static const Word GL_C4F_N3F_V3F = 0x2a26;
static const Word GL_T2F_V3F = 0x2a27;
static const Word GL_T4F_V4F = 0x2a28;
static const Word GL_T2F_C4UB_V3F = 0x2a29;
static const Word GL_T2F_C3F_V3F = 0x2a2a;
static const Word GL_T2F_N3F_V3F = 0x2a2b;
static const Word GL_T2F_C4F_N3F_V3F = 0x2a2c;
static const Word GL_T4F_C4F_N3F_V4F = 0x2a2d;
static const Word GL_CLIP_PLANE0 = 0x3000;
static const Word GL_CLIP_PLANE1 = 0x3001;
static const Word GL_CLIP_PLANE2 = 0x3002;
static const Word GL_CLIP_PLANE3 = 0x3003;
static const Word GL_CLIP_PLANE4 = 0x3004;
static const Word GL_CLIP_PLANE5 = 0x3005;
static const Word GL_LIGHT0 = 0x4000;
static const Word GL_LIGHT1 = 0x4001;
static const Word GL_LIGHT2 = 0x4002;
static const Word GL_LIGHT3 = 0x4003;
static const Word GL_LIGHT4 = 0x4004;
static const Word GL_LIGHT5 = 0x4005;
static const Word GL_LIGHT6 = 0x4006;
static const Word GL_LIGHT7 = 0x4007;
static const Word GL_ABGR_EXT = 0x8000;
static const Word GL_UNSIGNED_BYTE_3_3_2_EXT = 0x8032;
static const Word GL_UNSIGNED_SHORT_4_4_4_4_EXT = 0x8033;
static const Word GL_UNSIGNED_SHORT_5_5_5_1_EXT = 0x8034;
static const Word GL_UNSIGNED_INT_8_8_8_8_EXT = 0x8035;
static const Word GL_UNSIGNED_INT_10_10_10_2_EXT = 0x8036;
static const Word GL_VERTEX_ARRAY_EXT = 0x8074;
static const Word GL_NORMAL_ARRAY_EXT = 0x8075;
static const Word GL_COLOR_ARRAY_EXT = 0x8076;
static const Word GL_INDEX_ARRAY_EXT = 0x8077;
static const Word GL_TEXTURE_COORD_ARRAY_EXT = 0x8078;
static const Word GL_EDGE_FLAG_ARRAY_EXT = 0x8079;
static const Word GL_VERTEX_ARRAY_SIZE_EXT = 0x807a;
static const Word GL_VERTEX_ARRAY_TYPE_EXT = 0x807b;
static const Word GL_VERTEX_ARRAY_STRIDE_EXT = 0x807c;
static const Word GL_VERTEX_ARRAY_COUNT_EXT = 0x807d;
static const Word GL_NORMAL_ARRAY_TYPE_EXT = 0x807e;
static const Word GL_NORMAL_ARRAY_STRIDE_EXT = 0x807f;
static const Word GL_NORMAL_ARRAY_COUNT_EXT = 0x8080;
static const Word GL_COLOR_ARRAY_SIZE_EXT = 0x8081;
static const Word GL_COLOR_ARRAY_TYPE_EXT = 0x8082;
static const Word GL_COLOR_ARRAY_STRIDE_EXT = 0x8083;
static const Word GL_COLOR_ARRAY_COUNT_EXT = 0x8084;
static const Word GL_INDEX_ARRAY_TYPE_EXT = 0x8085;
static const Word GL_INDEX_ARRAY_STRIDE_EXT = 0x8086;
static const Word GL_INDEX_ARRAY_COUNT_EXT = 0x8087;
static const Word GL_TEXTURE_COORD_ARRAY_SIZE_EXT = 0x8088;
static const Word GL_TEXTURE_COORD_ARRAY_TYPE_EXT = 0x8089;
static const Word GL_TEXTURE_COORD_ARRAY_STRIDE_EXT = 0x808a;
static const Word GL_TEXTURE_COORD_ARRAY_COUNT_EXT = 0x808b;
static const Word GL_EDGE_FLAG_ARRAY_STRIDE_EXT = 0x808c;
static const Word GL_EDGE_FLAG_ARRAY_COUNT_EXT = 0x808d;
static const Word GL_VERTEX_ARRAY_POINTER_EXT = 0x808e;
static const Word GL_NORMAL_ARRAY_POINTER_EXT = 0x808f;
static const Word GL_COLOR_ARRAY_POINTER_EXT = 0x8090;
static const Word GL_INDEX_ARRAY_POINTER_EXT = 0x8091;
static const Word GL_TEXTURE_COORD_ARRAY_POINTER_EXT = 0x8092;
static const Word GL_EDGE_FLAG_ARRAY_POINTER_EXT = 0x8093;
static const Word GL_TABLE_TOO_LARGE_EXT = 0x8031;
static const Word GL_COLOR_TABLE_FORMAT_EXT = 0x80d8;
static const Word GL_COLOR_TABLE_WIDTH_EXT = 0x80d9;
static const Word GL_COLOR_TABLE_RED_SIZE_EXT = 0x80da;
static const Word GL_COLOR_TABLE_GREEN_SIZE_EXT = 0x80db;
static const Word GL_COLOR_TABLE_BLUE_SIZE_EXT = 0x80dc;
static const Word GL_COLOR_TABLE_ALPHA_SIZE_EXT = 0x80dd;
static const Word GL_COLOR_TABLE_LUMINANCE_SIZE_EXT = 0x80de;
static const Word GL_COLOR_TABLE_INTENSITY_SIZE_EXT = 0x80df;
static const Word GL_BGR_EXT = 0x80e0;
static const Word GL_BGRA_EXT = 0x80e1;
static const Word GL_COLOR_INDEX1_EXT = 0x80e2;
static const Word GL_COLOR_INDEX2_EXT = 0x80e3;
static const Word GL_COLOR_INDEX4_EXT = 0x80e4;
static const Word GL_COLOR_INDEX8_EXT = 0x80e5;
static const Word GL_COLOR_INDEX12_EXT = 0x80e6;
static const Word GL_COLOR_INDEX16_EXT = 0x80e7;
static const Word GL_ARRAY_ELEMENT_LOCK_FIRST_SGI = 0x81a8;
static const Word GL_ARRAY_ELEMENT_LOCK_COUNT_SGI = 0x81a9;
static const Word GL_CULL_VERTEX_SGI = 0x81aa;
static const Word GL_CULL_VERTEX_EYE_POSITION_SGI = 0x81ab;
static const Word GL_CULL_VERTEX_OBJECT_POSITION_SGI = 0x81ac;
static const Word GL_IUI_V2F_SGI = 0x81ad;
static const Word GL_IUI_V3F_SGI = 0x81ae;
static const Word GL_IUI_N3F_V2F_SGI = 0x81af;
static const Word GL_IUI_N3F_V3F_SGI = 0x81b0;
static const Word GL_T2F_IUI_V2F_SGI = 0x81b1;
static const Word GL_T2F_IUI_V3F_SGI = 0x81b2;
static const Word GL_T2F_IUI_N3F_V2F_SGI = 0x81b3;
static const Word GL_T2F_IUI_N3F_V3F_SGI = 0x81b4;
static const Word GL_INDEX_TEST_SGI = 0x81b5;
static const Word GL_INDEX_TEST_FUNC_SGI = 0x81b6;
static const Word GL_INDEX_TEST_REF_SGI = 0x81b7;
static const Word GL_INDEX_MATERIAL_SGI = 0x81b8;
static const Word GL_INDEX_MATERIAL_PARAMETER_SGI = 0x81b9;
static const Word GL_INDEX_MATERIAL_FACE_SGI = 0x81ba;
static const Word GL_CONSTANT_COLOR_EXT = 0x8001;
static const Word GL_ONE_MINUS_CONSTANT_COLOR_EXT = 0x8002;
static const Word GL_CONSTANT_ALPHA_EXT = 0x8003;
static const Word GL_ONE_MINUS_CONSTANT_ALPHA_EXT = 0x8004;
static const Word GL_BLEND_COLOR_EXT = 0x8005;
static const Word GL_FUNC_ADD_EXT = 0x8006;
static const Word GL_MIN_EXT = 0x8007;
static const Word GL_MAX_EXT = 0x8008;
static const Word GL_BLEND_EQUATION_EXT = 0x8009;
static const Word GL_FUNC_SUBTRACT_EXT = 0x800a;
static const Word GL_FUNC_REVERSE_SUBTRACT_EXT = 0x800b;
static const Word GL_CONVOLUTION_1D_EXT = 0x8010;
static const Word GL_CONVOLUTION_2D_EXT = 0x8011;
static const Word GL_SEPARABLE_2D_EXT = 0x8012;
static const Word GL_CONVOLUTION_BORDER_MODE_EXT = 0x8013;
static const Word GL_CONVOLUTION_FILTER_SCALE_EXT = 0x8014;
static const Word GL_CONVOLUTION_FILTER_BIAS_EXT = 0x8015;
static const Word GL_REDUCE_EXT = 0x8016;
static const Word GL_CONVOLUTION_FORMAT_EXT = 0x8017;
static const Word GL_CONVOLUTION_WIDTH_EXT = 0x8018;
static const Word GL_CONVOLUTION_HEIGHT_EXT = 0x8019;
static const Word GL_MAX_CONVOLUTION_WIDTH_EXT = 0x801a;
static const Word GL_MAX_CONVOLUTION_HEIGHT_EXT = 0x801b;
static const Word GL_POST_CONVOLUTION_RED_SCALE_EXT = 0x801c;
static const Word GL_POST_CONVOLUTION_GREEN_SCALE_EXT = 0x801d;
static const Word GL_POST_CONVOLUTION_BLUE_SCALE_EXT = 0x801e;
static const Word GL_POST_CONVOLUTION_ALPHA_SCALE_EXT = 0x801f;
static const Word GL_POST_CONVOLUTION_RED_BIAS_EXT = 0x8020;
static const Word GL_POST_CONVOLUTION_GREEN_BIAS_EXT = 0x8021;
static const Word GL_POST_CONVOLUTION_BLUE_BIAS_EXT = 0x8022;
static const Word GL_POST_CONVOLUTION_ALPHA_BIAS_EXT = 0x8023;
static const Word GL_HISTOGRAM_EXT = 0x8024;
static const Word GL_PROXY_HISTOGRAM_EXT = 0x8025;
static const Word GL_HISTOGRAM_WIDTH_EXT = 0x8026;
static const Word GL_HISTOGRAM_FORMAT_EXT = 0x8027;
static const Word GL_HISTOGRAM_RED_SIZE_EXT = 0x8028;
static const Word GL_HISTOGRAM_GREEN_SIZE_EXT = 0x8029;
static const Word GL_HISTOGRAM_BLUE_SIZE_EXT = 0x802a;
static const Word GL_HISTOGRAM_ALPHA_SIZE_EXT = 0x802b;
static const Word GL_HISTOGRAM_LUMINANCE_SIZE_EXT = 0x802c;
static const Word GL_HISTOGRAM_SINK_EXT = 0x802d;
static const Word GL_MINMAX_EXT = 0x802e;
static const Word GL_MINMAX_FORMAT_EXT = 0x802f;
static const Word GL_MINMAX_SINK_EXT = 0x8030;
static const Word GL_POLYGON_OFFSET_EXT = 0x8037;
static const Word GL_POLYGON_OFFSET_FACTOR_EXT = 0x8038;
static const Word GL_POLYGON_OFFSET_BIAS_EXT = 0x8039;
static const Word GL_ALPHA4_EXT = 0x803b;
static const Word GL_ALPHA8_EXT = 0x803c;
static const Word GL_ALPHA12_EXT = 0x803d;
static const Word GL_ALPHA16_EXT = 0x803e;
static const Word GL_LUMINANCE4_EXT = 0x803f;
static const Word GL_LUMINANCE8_EXT = 0x8040;
static const Word GL_LUMINANCE12_EXT = 0x8041;
static const Word GL_LUMINANCE16_EXT = 0x8042;
static const Word GL_LUMINANCE4_ALPHA4_EXT = 0x8043;
static const Word GL_LUMINANCE6_ALPHA2_EXT = 0x8044;
static const Word GL_LUMINANCE8_ALPHA8_EXT = 0x8045;
static const Word GL_LUMINANCE12_ALPHA4_EXT = 0x8046;
static const Word GL_LUMINANCE12_ALPHA12_EXT = 0x8047;
static const Word GL_LUMINANCE16_ALPHA16_EXT = 0x8048;
static const Word GL_INTENSITY_EXT = 0x8049;
static const Word GL_INTENSITY4_EXT = 0x804a;
static const Word GL_INTENSITY8_EXT = 0x804b;
static const Word GL_INTENSITY12_EXT = 0x804c;
static const Word GL_INTENSITY16_EXT = 0x804d;
static const Word GL_RGB2_EXT = 0x804e;
static const Word GL_RGB4_EXT = 0x804f;
static const Word GL_RGB5_EXT = 0x8050;
static const Word GL_RGB8_EXT = 0x8051;
static const Word GL_RGB10_EXT = 0x8052;
static const Word GL_RGB12_EXT = 0x8053;
static const Word GL_RGB16_EXT = 0x8054;
static const Word GL_RGBA2_EXT = 0x8055;
static const Word GL_RGBA4_EXT = 0x8056;
static const Word GL_RGB5_A1_EXT = 0x8057;
static const Word GL_RGBA8_EXT = 0x8058;
static const Word GL_RGB10_A2_EXT = 0x8059;
static const Word GL_RGBA12_EXT = 0x805a;
static const Word GL_RGBA16_EXT = 0x805b;
static const Word GL_TEXTURE_RED_SIZE_EXT = 0x805c;
static const Word GL_TEXTURE_GREEN_SIZE_EXT = 0x805d;
static const Word GL_TEXTURE_BLUE_SIZE_EXT = 0x805e;
static const Word GL_TEXTURE_ALPHA_SIZE_EXT = 0x805f;
static const Word GL_TEXTURE_LUMINANCE_SIZE_EXT = 0x8060;
static const Word GL_TEXTURE_INTENSITY_SIZE_EXT = 0x8061;
static const Word GL_REPLACE_EXT = 0x8062;
static const Word GL_PROXY_TEXTURE_1D_EXT = 0x8063;
static const Word GL_PROXY_TEXTURE_2D_EXT = 0x8064;
static const Word GL_TEXTURE_TOO_LARGE_EXT = 0x8065;
static const Word GL_TEXTURE_PRIORITY_EXT = 0x8066;
static const Word GL_TEXTURE_RESIDENT_EXT = 0x8067;
static const Word GL_TEXTURE_1D_BINDING_EXT = 0x8068;
static const Word GL_TEXTURE_2D_BINDING_EXT = 0x8069;
static const Word GL_TEXTURE_3D_BINDING_EXT = 0x806a;
static const Word GL_PACK_SKIP_IMAGES_EXT = 0x806b;
static const Word GL_PACK_IMAGE_HEIGHT_EXT = 0x806c;
static const Word GL_UNPACK_SKIP_IMAGES_EXT = 0x806d;
static const Word GL_UNPACK_IMAGE_HEIGHT_EXT = 0x806e;
static const Word GL_TEXTURE_3D_EXT = 0x806f;
static const Word GL_PROXY_TEXTURE_3D_EXT = 0x8070;
static const Word GL_TEXTURE_DEPTH_EXT = 0x8071;
static const Word GL_TEXTURE_WRAP_R_EXT = 0x8072;
static const Word GL_MAX_3D_TEXTURE_SIZE_EXT = 0x8073;
static const Word GL_COLOR_MATRIX_SGI = 0x80b1;
static const Word GL_COLOR_MATRIX_STACK_DEPTH_SGI = 0x80b2;
static const Word GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI = 0x80b3;
static const Word GL_POST_COLOR_MATRIX_RED_SCALE_SGI = 0x80b4;
static const Word GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI = 0x80b5;
static const Word GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI = 0x80b6;
static const Word GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI = 0x80b7;
static const Word GL_POST_COLOR_MATRIX_RED_BIAS_SGI = 0x80b8;
static const Word GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI = 0x80b9;
static const Word GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI = 0x80ba;
static const Word GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI = 0x80bb;
static const Word GL_TEXTURE_COLOR_TABLE_SGI = 0x80bc;
static const Word GL_PROXY_TEXTURE_COLOR_TABLE_SGI = 0x80bd;
static const Word GL_TEXTURE_COLOR_TABLE_BIAS_SGI = 0x80be;
static const Word GL_TEXTURE_COLOR_TABLE_SCALE_SGI = 0x80bf;
static const Word GL_COLOR_TABLE_SGI = 0x80d0;
static const Word GL_POST_CONVOLUTION_COLOR_TABLE_SGI = 0x80d1;
static const Word GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI = 0x80d2;
static const Word GL_PROXY_COLOR_TABLE_SGI = 0x80d3;
static const Word GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI = 0x80d4;
static const Word GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI = 0x80d5;
static const Word GL_COLOR_TABLE_SCALE_SGI = 0x80d6;
static const Word GL_COLOR_TABLE_BIAS_SGI = 0x80d7;
static const Word GL_COLOR_TABLE_FORMAT_SGI = 0x80d8;
static const Word GL_COLOR_TABLE_WIDTH_SGI = 0x80d9;
static const Word GL_COLOR_TABLE_RED_SIZE_SGI = 0x80da;
static const Word GL_COLOR_TABLE_GREEN_SIZE_SGI = 0x80db;
static const Word GL_COLOR_TABLE_BLUE_SIZE_SGI = 0x80dc;
static const Word GL_COLOR_TABLE_ALPHA_SIZE_SGI = 0x80dd;
static const Word GL_COLOR_TABLE_LUMINANCE_SIZE_SGI = 0x80de;
static const Word GL_COLOR_TABLE_INTENSITY_SIZE_SGI = 0x80df;
static const Word GL_CMYK_EXT = 0x800c;
static const Word GL_CMYKA_EXT = 0x800d;
static const Word GL_PACK_CMYK_HINT_EXT = 0x800e;
static const Word GL_UNPACK_CMYK_HINT_EXT = 0x800f;
static const Word GL_RESCALE_NORMAL_EXT = 0x803a;
static const Word GL_CLIP_VOLUME_CLIPPING_HINT_EXT = 0x80f0;
static const Shortint GL_CULL_VERTEX_EXT = 0x0;
static const Shortint GL_CULL_VERTEX_EYE_POSITION_EXT = 0x0;
static const Shortint GL_CULL_VERTEX_OBJECT_POSITION_EXT = 0x0;
static const Shortint GL_IUI_V2F_EXT = 0x0;
static const Shortint GL_IUI_V3F_EXT = 0x0;
static const Shortint GL_IUI_N3F_V2F_EXT = 0x0;
static const Shortint GL_IUI_N3F_V3F_EXT = 0x0;
static const Shortint GL_T2F_IUI_V2F_EXT = 0x0;
static const Shortint GL_T2F_IUI_V3F_EXT = 0x0;
static const Shortint GL_T2F_IUI_N3F_V2F_EXT = 0x0;
static const Shortint GL_T2F_IUI_N3F_V3F_EXT = 0x0;
static const Shortint GL_INDEX_TEST_EXT = 0x0;
static const Shortint GL_INDEX_TEST_FUNC_EXT = 0x0;
static const Shortint GL_INDEX_TEST_REF_EXT = 0x0;
static const Shortint GL_INDEX_MATERIAL_EXT = 0x0;
static const Shortint GL_INDEX_MATERIAL_PARAMETER_EXT = 0x0;
static const Shortint GL_INDEX_MATERIAL_FACE_EXT = 0x0;
static const Shortint GL_MISC_BIT_EXT = 0x0;
static const Shortint GL_SCENE_REQUIRED_EXT = 0x0;
static const Word GL_SHARED_TEXTURE_PALETTE_EXT = 0x81fb;
static const int GLU_NURBS_MODE_EXT = 0x18740;
static const int GLU_NURBS_TESSELLATOR_EXT = 0x18741;
static const int GLU_NURBS_RENDERER_EXT = 0x18742;
static const int GLU_NURBS_BEGIN_EXT = 0x18744;
static const int GLU_NURBS_VERTEX_EXT = 0x18745;
static const int GLU_NURBS_NORMAL_EXT = 0x18746;
static const int GLU_NURBS_COLOR_EXT = 0x18747;
static const int GLU_NURBS_TEX_COORD_EXT = 0x18748;
static const int GLU_NURBS_END_EXT = 0x18749;
static const int GLU_NURBS_BEGIN_DATA_EXT = 0x1874a;
static const int GLU_NURBS_VERTEX_DATA_EXT = 0x1874b;
static const int GLU_NURBS_NORMAL_DATA_EXT = 0x1874c;
static const int GLU_NURBS_COLOR_DATA_EXT = 0x1874d;
static const int GLU_NURBS_TEX_COORD_DATA_EXT = 0x1874e;
static const int GLU_NURBS_END_DATA_EXT = 0x1874f;
static const int GLU_OBJECT_PARAMETRIC_ERROR_EXT = 0x18770;
static const int GLU_OBJECT_PATH_LENGTH_EXT = 0x18771;
static const int GLU_INVALID_ENUM = 0x18a24;
static const int GLU_INVALID_VALUE = 0x18a25;
static const int GLU_OUT_OF_MEMORY = 0x18a26;
static const int GLU_INCOMPATIBLE_GL_VERSION = 0x18a27;
static const int GLU_VERSION = 0x189c0;
static const int GLU_EXTENSIONS = 0x189c1;
static const Shortint GLU_TRUE = 0x1;
static const Shortint GLU_FALSE = 0x0;
static const int GLU_SMOOTH = 0x186a0;
static const int GLU_FLAT = 0x186a1;
static const int GLU_NONE = 0x186a2;
static const int GLU_POINT = 0x186aa;
static const int GLU_LINE = 0x186ab;
static const int GLU_FILL = 0x186ac;
static const int GLU_SILHOUETTE = 0x186ad;
static const int GLU_OUTSIDE = 0x186b4;
static const int GLU_INSIDE = 0x186b5;
static const Extended GLU_TESS_MAX_COORD = 1.000000E+150;
static const int GLU_TESS_WINDING_RULE = 0x1872c;
static const int GLU_TESS_BOUNDARY_ONLY = 0x1872d;
static const int GLU_TESS_TOLERANCE = 0x1872e;
static const int GLU_TESS_WINDING_ODD = 0x18722;
static const int GLU_TESS_WINDING_NONZERO = 0x18723;
static const int GLU_TESS_WINDING_POSITIVE = 0x18724;
static const int GLU_TESS_WINDING_NEGATIVE = 0x18725;
static const int GLU_TESS_WINDING_ABS_GEQ_TWO = 0x18726;
static const int GLU_TESS_BEGIN = 0x18704;
static const int GLU_TESS_VERTEX = 0x18705;
static const int GLU_TESS_END = 0x18706;
static const int GLU_TESS_ERROR = 0x18707;
static const int GLU_TESS_EDGE_FLAG = 0x18708;
static const int GLU_TESS_COMBINE = 0x18709;
static const int GLU_TESS_BEGIN_DATA = 0x1870a;
static const int GLU_TESS_VERTEX_DATA = 0x1870b;
static const int GLU_TESS_END_DATA = 0x1870c;
static const int GLU_TESS_ERROR_DATA = 0x1870d;
static const int GLU_TESS_EDGE_FLAG_DATA = 0x1870e;
static const int GLU_TESS_COMBINE_DATA = 0x1870f;
static const int GLU_TESS_ERROR1 = 0x18737;
static const int GLU_TESS_ERROR2 = 0x18738;
static const int GLU_TESS_ERROR3 = 0x18739;
static const int GLU_TESS_ERROR4 = 0x1873a;
static const int GLU_TESS_ERROR5 = 0x1873b;
static const int GLU_TESS_ERROR6 = 0x1873c;
static const int GLU_TESS_ERROR7 = 0x1873d;
static const int GLU_TESS_ERROR8 = 0x1873e;
static const int GLU_TESS_MISSING_BEGIN_POLYGON = 0x18737;
static const int GLU_TESS_MISSING_BEGIN_CONTOUR = 0x18738;
static const int GLU_TESS_MISSING_END_POLYGON = 0x18739;
static const int GLU_TESS_MISSING_END_CONTOUR = 0x1873a;
static const int GLU_TESS_COORD_TOO_LARGE = 0x1873b;
static const int GLU_TESS_NEED_COMBINE_CALLBACK = 0x1873c;
static const int GLU_AUTO_LOAD_MATRIX = 0x18768;
static const int GLU_CULLING = 0x18769;
static const int GLU_SAMPLING_TOLERANCE = 0x1876b;
static const int GLU_DISPLAY_MODE = 0x1876c;
static const int GLU_PARAMETRIC_TOLERANCE = 0x1876a;
static const int GLU_SAMPLING_METHOD = 0x1876d;
static const int GLU_U_STEP = 0x1876e;
static const int GLU_V_STEP = 0x1876f;
static const int GLU_PATH_LENGTH = 0x18777;
static const int GLU_PARAMETRIC_ERROR = 0x18778;
static const int GLU_DOMAIN_DISTANCE = 0x18779;
static const int GLU_MAP1_TRIM_2 = 0x18772;
static const int GLU_MAP1_TRIM_3 = 0x18773;
static const int GLU_OUTLINE_POLYGON = 0x18790;
static const int GLU_OUTLINE_PATCH = 0x18791;
static const int GLU_NURBS_ERROR1 = 0x1879b;
static const int GLU_NURBS_ERROR2 = 0x1879c;
static const int GLU_NURBS_ERROR3 = 0x1879d;
static const int GLU_NURBS_ERROR4 = 0x1879e;
static const int GLU_NURBS_ERROR5 = 0x1879f;
static const int GLU_NURBS_ERROR6 = 0x187a0;
static const int GLU_NURBS_ERROR7 = 0x187a1;
static const int GLU_NURBS_ERROR8 = 0x187a2;
static const int GLU_NURBS_ERROR9 = 0x187a3;
static const int GLU_NURBS_ERROR10 = 0x187a4;
static const int GLU_NURBS_ERROR11 = 0x187a5;
static const int GLU_NURBS_ERROR12 = 0x187a6;
static const int GLU_NURBS_ERROR13 = 0x187a7;
static const int GLU_NURBS_ERROR14 = 0x187a8;
static const int GLU_NURBS_ERROR15 = 0x187a9;
static const int GLU_NURBS_ERROR16 = 0x187aa;
static const int GLU_NURBS_ERROR17 = 0x187ab;
static const int GLU_NURBS_ERROR18 = 0x187ac;
static const int GLU_NURBS_ERROR19 = 0x187ad;
static const int GLU_NURBS_ERROR20 = 0x187ae;
static const int GLU_NURBS_ERROR21 = 0x187af;
static const int GLU_NURBS_ERROR22 = 0x187b0;
static const int GLU_NURBS_ERROR23 = 0x187b1;
static const int GLU_NURBS_ERROR24 = 0x187b2;
static const int GLU_NURBS_ERROR25 = 0x187b3;
static const int GLU_NURBS_ERROR26 = 0x187b4;
static const int GLU_NURBS_ERROR27 = 0x187b5;
static const int GLU_NURBS_ERROR28 = 0x187b6;
static const int GLU_NURBS_ERROR29 = 0x187b7;
static const int GLU_NURBS_ERROR30 = 0x187b8;
static const int GLU_NURBS_ERROR31 = 0x187b9;
static const int GLU_NURBS_ERROR32 = 0x187ba;
static const int GLU_NURBS_ERROR33 = 0x187bb;
static const int GLU_NURBS_ERROR34 = 0x187bc;
static const int GLU_NURBS_ERROR35 = 0x187bd;
static const int GLU_NURBS_ERROR36 = 0x187be;
static const int GLU_NURBS_ERROR37 = 0x187bf;
static const int GLU_CW = 0x18718;
static const int GLU_CCW = 0x18719;
static const int GLU_INTERIOR = 0x1871a;
static const int GLU_EXTERIOR = 0x1871b;
static const int GLU_UNKNOWN = 0x1871c;
static const int GLU_BEGIN = 0x18704;
static const int GLU_VERTEX = 0x18705;
static const int GLU_END = 0x18706;
static const int GLU_ERROR = 0x18707;
static const int GLU_EDGE_FLAG = 0x18708;
extern PACKAGE void __stdcall (*gluNurbsCallbackDataEXT)(PGLUNurbs nurb, void * userData);
extern PACKAGE PGLUNurbs __stdcall (*gluNewNurbsTessellatorEXT)(void);
extern PACKAGE void __stdcall (*gluDeleteNurbsTessellatorEXT)(PGLUNurbs nurb);
#define OpenGL32DLL "OpenGL32.DLL"
#define OpenGLU32DLL "GLU32.DLL"
extern PACKAGE void __stdcall (*glAccum)(unsigned op, float value);
extern PACKAGE void __stdcall (*glAlphaFunc)(unsigned func, float ref);
extern PACKAGE Byte __stdcall (*glAreTexturesResident)(int n, PGLuint Textures, PGLboolean residences);
extern PACKAGE void __stdcall (*glArrayElement)(int i);
extern PACKAGE void __stdcall (*glBegin)(unsigned mode);
extern PACKAGE void __stdcall (*glBindTexture)(unsigned target, unsigned texture);
extern PACKAGE void __stdcall (*glBitmap)(int width, int height, float xorig, float yorig, float xmove, float ymove, void * bitmap);
extern PACKAGE void __stdcall (*glBlendFunc)(unsigned sfactor, unsigned dfactor);
extern PACKAGE void __stdcall (*glCallList)(unsigned list);
extern PACKAGE void __stdcall (*glCallLists)(int n, unsigned atype, void * lists);
extern PACKAGE void __stdcall (*glClear)(unsigned mask);
extern PACKAGE void __stdcall (*glClearAccum)(float red, float green, float blue, float alpha);
extern PACKAGE void __stdcall (*glClearColor)(float red, float green, float blue, float alpha);
extern PACKAGE void __stdcall (*glClearDepth)(double depth);
extern PACKAGE void __stdcall (*glClearIndex)(float c);
extern PACKAGE void __stdcall (*glClearStencil)(int s);
extern PACKAGE void __stdcall (*glClipPlane)(unsigned plane, PGLdouble equation);
extern PACKAGE void __stdcall (*glColor3b)(Shortint red, Shortint green, Shortint blue);
extern PACKAGE void __stdcall (*glColor3bv)(PGLbyte v);
extern PACKAGE void __stdcall (*glColor3d)(double red, double green, double blue);
extern PACKAGE void __stdcall (*glColor3dv)(PGLdouble v);
extern PACKAGE void __stdcall (*glColor3f)(float red, float green, float blue);
extern PACKAGE void __stdcall (*glColor3fv)(PGLfloat v);
extern PACKAGE void __stdcall (*glColor3i)(int red, int green, int blue);
extern PACKAGE void __stdcall (*glColor3iv)(PGLint v);
extern PACKAGE void __stdcall (*glColor3s)(short red, short green, short blue);
extern PACKAGE void __stdcall (*glColor3sv)(PGLshort v);
extern PACKAGE void __stdcall (*glColor3ub)(Byte red, Byte green, Byte blue);
extern PACKAGE void __stdcall (*glColor3ubv)(PGLubyte v);
extern PACKAGE void __stdcall (*glColor3ui)(unsigned red, unsigned green, unsigned blue);
extern PACKAGE void __stdcall (*glColor3uiv)(PGLuint v);
extern PACKAGE void __stdcall (*glColor3us)(Word red, Word green, Word blue);
extern PACKAGE void __stdcall (*glColor3usv)(PGLushort v);
extern PACKAGE void __stdcall (*glColor4b)(Shortint red, Shortint green, Shortint blue, Shortint alpha);
extern PACKAGE void __stdcall (*glColor4bv)(PGLbyte v);
extern PACKAGE void __stdcall (*glColor4d)(double red, double green, double blue, double alpha);
extern PACKAGE void __stdcall (*glColor4dv)(PGLdouble v);
extern PACKAGE void __stdcall (*glColor4f)(float red, float green, float blue, float alpha);
extern PACKAGE void __stdcall (*glColor4fv)(PGLfloat v);
extern PACKAGE void __stdcall (*glColor4i)(int red, int green, int blue, int alpha);
extern PACKAGE void __stdcall (*glColor4iv)(PGLint v);
extern PACKAGE void __stdcall (*glColor4s)(short red, short green, short blue, short alpha);
extern PACKAGE void __stdcall (*glColor4sv)(short v);
extern PACKAGE void __stdcall (*glColor4ub)(Byte red, Byte green, Byte blue, Byte alpha);
extern PACKAGE void __stdcall (*glColor4ubv)(PGLubyte v);
extern PACKAGE void __stdcall (*glColor4ui)(unsigned red, unsigned green, unsigned blue, unsigned alpha);
extern PACKAGE void __stdcall (*glColor4uiv)(PGLuint v);
extern PACKAGE void __stdcall (*glColor4us)(Word red, Word green, Word blue, Word alpha);
extern PACKAGE void __stdcall (*glColor4usv)(PGLushort v);
extern PACKAGE void __stdcall (*glColorMask)(Byte red, Byte green, Byte blue, Byte alpha);
extern PACKAGE void __stdcall (*glColorMaterial)(unsigned face, unsigned mode);
extern PACKAGE void __stdcall (*glColorPointer)(int size, unsigned atype, int stride, void * data);
extern PACKAGE void __stdcall (*glCopyPixels)(int x, int y, int width, int height, unsigned atype);
extern PACKAGE void __stdcall (*glCopyTexImage1D)(unsigned target, int level, unsigned internalFormat, int x, int y, int width, int border);
extern PACKAGE void __stdcall (*glCopyTexImage2D)(unsigned target, int level, unsigned internalFormat, int x, int y, int width, int height, int border);
extern PACKAGE void __stdcall (*glCopyTexSubImage1D)(unsigned target, int level, int xoffset, int x, int y, int width);
extern PACKAGE void __stdcall (*glCopyTexSubImage2D)(unsigned target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
extern PACKAGE void __stdcall (*glCullFace)(unsigned mode);
extern PACKAGE void __stdcall (*glDeleteLists)(unsigned list, int range);
extern PACKAGE void __stdcall (*glDeleteTextures)(int n, PGLuint textures);
extern PACKAGE void __stdcall (*glDepthFunc)(unsigned func);
extern PACKAGE void __stdcall (*glDepthMask)(Byte flag);
extern PACKAGE void __stdcall (*glDepthRange)(double zNear, double zFar);
extern PACKAGE void __stdcall (*glDisable)(unsigned cap);
extern PACKAGE void __stdcall (*glDisableClientState)(unsigned aarray);
extern PACKAGE void __stdcall (*glDrawArrays)(unsigned mode, int first, int count);
extern PACKAGE void __stdcall (*glDrawBuffer)(unsigned mode);
extern PACKAGE void __stdcall (*glDrawElements)(unsigned mode, int count, unsigned atype, void * indices);
extern PACKAGE void __stdcall (*glDrawPixels)(int width, int height, unsigned format, unsigned atype, void * pixels);
extern PACKAGE void __stdcall (*glEdgeFlag)(Byte flag);
extern PACKAGE void __stdcall (*glEdgeFlagPointer)(int stride, void * data);
extern PACKAGE void __stdcall (*glEdgeFlagv)(PGLboolean flag);
extern PACKAGE void __stdcall (*glEnable)(unsigned cap);
extern PACKAGE void __stdcall (*glEnableClientState)(unsigned aarray);
extern PACKAGE void __stdcall (*glEnd)(void);
extern PACKAGE void __stdcall (*glEndList)(void);
extern PACKAGE void __stdcall (*glEvalCoord1d)(double u);
extern PACKAGE void __stdcall (*glEvalCoord1dv)(PGLdouble u);
extern PACKAGE void __stdcall (*glEvalCoord1f)(float u);
extern PACKAGE void __stdcall (*glEvalCoord1fv)(PGLfloat u);
extern PACKAGE void __stdcall (*glEvalCoord2d)(double u, double v);
extern PACKAGE void __stdcall (*glEvalCoord2dv)(PGLdouble u);
extern PACKAGE void __stdcall (*glEvalCoord2f)(float u, float v);
extern PACKAGE void __stdcall (*glEvalCoord2fv)(PGLfloat u);
extern PACKAGE void __stdcall (*glEvalMesh1)(unsigned mode, int i1, int i2);
extern PACKAGE void __stdcall (*glEvalMesh2)(unsigned mode, int i1, int i2, int j1, int j2);
extern PACKAGE void __stdcall (*glEvalPoint1)(int i);
extern PACKAGE void __stdcall (*glEvalPoint2)(int i, int j);
extern PACKAGE void __stdcall (*glFeedbackBuffer)(int size, unsigned atype, PGLfloat buffer);
extern PACKAGE void __stdcall (*glFinish)(void);
extern PACKAGE void __stdcall (*glFlush)(void);
extern PACKAGE void __stdcall (*glFogf)(unsigned pname, float param);
extern PACKAGE void __stdcall (*glFogfv)(unsigned pname, PGLfloat params);
extern PACKAGE void __stdcall (*glFogi)(unsigned pname, int param);
extern PACKAGE void __stdcall (*glFogiv)(unsigned pname, PGLint params);
extern PACKAGE void __stdcall (*glFrontFace)(unsigned mode);
extern PACKAGE void __stdcall (*glFrustum)(double left, double right, double bottom, double top, double zNear, double zFar);
extern PACKAGE unsigned __stdcall (*glGenLists)(int range);
extern PACKAGE void __stdcall (*glGenTextures)(int n, PGLuint textures);
extern PACKAGE void __stdcall (*glGetBooleanv)(unsigned pname, PGLboolean params);
extern PACKAGE void __stdcall (*glGetClipPlane)(unsigned plane, PGLdouble equation);
extern PACKAGE void __stdcall (*glGetDoublev)(unsigned pname, PGLdouble params);
extern PACKAGE unsigned __stdcall (*glGetError)(void);
extern PACKAGE void __stdcall (*glGetFloatv)(unsigned pname, PGLfloat params);
extern PACKAGE void __stdcall (*glGetIntegerv)(unsigned pname, PGLint params);
extern PACKAGE void __stdcall (*glGetLightfv)(unsigned light, unsigned pname, PGLfloat params);
extern PACKAGE void __stdcall (*glGetLightiv)(unsigned light, unsigned pname, PGLint params);
extern PACKAGE void __stdcall (*glGetMapdv)(unsigned target, unsigned query, PGLdouble v);
extern PACKAGE void __stdcall (*glGetMapfv)(unsigned target, unsigned query, PGLfloat v);
extern PACKAGE void __stdcall (*glGetMapiv)(unsigned target, unsigned query, PGLint v);
extern PACKAGE void __stdcall (*glGetMaterialfv)(unsigned face, unsigned pname, PGLfloat params);
extern PACKAGE void __stdcall (*glGetMaterialiv)(unsigned face, unsigned pname, PGLint params);
extern PACKAGE void __stdcall (*glGetPixelMapfv)(unsigned map, PGLfloat values);
extern PACKAGE void __stdcall (*glGetPixelMapuiv)(unsigned map, PGLuint values);
extern PACKAGE void __stdcall (*glGetPixelMapusv)(unsigned map, PGLushort values);
extern PACKAGE void __stdcall (*glGetPointerv)(unsigned pname, void * params);
extern PACKAGE void __stdcall (*glGetPolygonStipple)(PGLubyte mask);
extern PACKAGE PGLubyte __stdcall (*glGetString)(unsigned name);
extern PACKAGE void __stdcall (*glGetTexEnvfv)(unsigned target, unsigned pname, PGLfloat params);
extern PACKAGE void __stdcall (*glGetTexEnviv)(unsigned target, unsigned pname, PGLint params);
extern PACKAGE void __stdcall (*glGetTexGendv)(unsigned coord, unsigned pname, PGLdouble params);
extern PACKAGE void __stdcall (*glGetTexGenfv)(unsigned coord, unsigned pname, PGLfloat params);
extern PACKAGE void __stdcall (*glGetTexGeniv)(unsigned coord, unsigned pname, PGLint params);
extern PACKAGE void __stdcall (*glGetTexImage)(unsigned target, int level, unsigned format, unsigned atype, void * pixels);
extern PACKAGE void __stdcall (*glGetTexLevelParameterfv)(unsigned target, int level, unsigned pname, PGLfloat params);
extern PACKAGE void __stdcall (*glGetTexLevelParameteriv)(unsigned target, int level, unsigned pname, PGLint params);
extern PACKAGE void __stdcall (*glGetTexParameterfv)(unsigned target, unsigned pname, PGLfloat params);
extern PACKAGE void __stdcall (*glGetTexParameteriv)(unsigned target, unsigned pname, PGLint params);
extern PACKAGE void __stdcall (*glHint)(unsigned target, unsigned mode);
extern PACKAGE void __stdcall (*glIndexMask)(unsigned mask);
extern PACKAGE void __stdcall (*glIndexPointer)(unsigned atype, int stride, void * data);
extern PACKAGE void __stdcall (*glIndexd)(double c);
extern PACKAGE void __stdcall (*glIndexdv)(PGLdouble c);
extern PACKAGE void __stdcall (*glIndexf)(float c);
extern PACKAGE void __stdcall (*glIndexfv)(PGLfloat c);
extern PACKAGE void __stdcall (*glIndexi)(int c);
extern PACKAGE void __stdcall (*glIndexiv)(PGLint c);
extern PACKAGE void __stdcall (*glIndexs)(short c);
extern PACKAGE void __stdcall (*glIndexsv)(PGLshort c);
extern PACKAGE void __stdcall (*glIndexub)(Byte c);
extern PACKAGE void __stdcall (*glIndexubv)(PGLubyte c);
extern PACKAGE void __stdcall (*glInitNames)(void);
extern PACKAGE void __stdcall (*glInterleavedArrays)(unsigned format, int stride, void * data);
extern PACKAGE Byte __stdcall (*glIsEnabled)(unsigned cap);
extern PACKAGE Byte __stdcall (*glIsList)(unsigned list);
extern PACKAGE Byte __stdcall (*glIsTexture)(unsigned texture);
extern PACKAGE void __stdcall (*glLightModelf)(unsigned pname, float param);
extern PACKAGE void __stdcall (*glLightModelfv)(unsigned pname, PGLfloat params);
extern PACKAGE void __stdcall (*glLightModeli)(unsigned pname, int param);
extern PACKAGE void __stdcall (*glLightModeliv)(unsigned pname, PGLint params);
extern PACKAGE void __stdcall (*glLightf)(unsigned light, unsigned pname, float param);
extern PACKAGE void __stdcall (*glLightfv)(unsigned light, unsigned pname, PGLfloat params);
extern PACKAGE void __stdcall (*glLighti)(unsigned light, unsigned pname, int param);
extern PACKAGE void __stdcall (*glLightiv)(unsigned light, unsigned pname, PGLint params);
extern PACKAGE void __stdcall (*glLineStipple)(int factor, Word pattern);
extern PACKAGE void __stdcall (*glLineWidth)(float width);
extern PACKAGE void __stdcall (*glListBase)(unsigned base);
extern PACKAGE void __stdcall (*glLoadIdentity)(void);
extern PACKAGE void __stdcall (*glLoadMatrixd)(PGLdouble m);
extern PACKAGE void __stdcall (*glLoadMatrixf)(PGLfloat m);
extern PACKAGE void __stdcall (*glLoadName)(unsigned name);
extern PACKAGE void __stdcall (*glLogicOp)(unsigned opcode);
extern PACKAGE void __stdcall (*glMap1d)(unsigned target, double u1, double u2, int stride, int order, PGLdouble points);
extern PACKAGE void __stdcall (*glMap1f)(unsigned target, float u1, float u2, int stride, int order, PGLfloat points);
extern PACKAGE void __stdcall (*glMap2d)(unsigned target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, PGLdouble points);
extern PACKAGE void __stdcall (*glMap2f)(unsigned target, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, PGLfloat points);
extern PACKAGE void __stdcall (*glMapGrid1d)(int un, double u1, double u2);
extern PACKAGE void __stdcall (*glMapGrid1f)(int un, float u1, float u2);
extern PACKAGE void __stdcall (*glMapGrid2d)(int un, double u1, double u2, int vn, double v1, double v2);
extern PACKAGE void __stdcall (*glMapGrid2f)(int un, float u1, float u2, int vn, float v1, float v2);
extern PACKAGE void __stdcall (*glMaterialf)(unsigned face, unsigned pname, float param);
extern PACKAGE void __stdcall (*glMaterialfv)(unsigned face, unsigned pname, PGLfloat params);
extern PACKAGE void __stdcall (*glMateriali)(unsigned face, unsigned pname, int param);
extern PACKAGE void __stdcall (*glMaterialiv)(unsigned face, unsigned pname, PGLint params);
extern PACKAGE void __stdcall (*glMatrixMode)(unsigned mode);
extern PACKAGE void __stdcall (*glMultMatrixd)(PGLdouble m);
extern PACKAGE void __stdcall (*glMultMatrixf)(PGLfloat m);
extern PACKAGE void __stdcall (*glNewList)(unsigned list, unsigned mode);
extern PACKAGE void __stdcall (*glNormal3b)(Shortint nx, Shortint ny, Shortint nz);
extern PACKAGE void __stdcall (*glNormal3bv)(PGLbyte v);
extern PACKAGE void __stdcall (*glNormal3d)(double nx, double ny, double nz);
extern PACKAGE void __stdcall (*glNormal3dv)(PGLdouble v);
extern PACKAGE void __stdcall (*glNormal3f)(float nx, float ny, float nz);
extern PACKAGE void __stdcall (*glNormal3fv)(PGLfloat v);
extern PACKAGE void __stdcall (*glNormal3i)(int nx, int ny, int nz);
extern PACKAGE void __stdcall (*glNormal3iv)(PGLint v);
extern PACKAGE void __stdcall (*glNormal3s)(short nx, short ny, short nz);
extern PACKAGE void __stdcall (*glNormal3sv)(PGLshort v);
extern PACKAGE void __stdcall (*glNormalPointer)(unsigned atype, int stride, void * data);
extern PACKAGE void __stdcall (*glOrtho)(double left, double right, double bottom, double top, double zNear, double zFar);
extern PACKAGE void __stdcall (*glPassThrough)(float token);
extern PACKAGE void __stdcall (*glPixelMapfv)(unsigned map, int mapsize, PGLfloat values);
extern PACKAGE void __stdcall (*glPixelMapuiv)(unsigned map, int mapsize, PGLuint values);
extern PACKAGE void __stdcall (*glPixelMapusv)(unsigned map, int mapsize, PGLushort values);
extern PACKAGE void __stdcall (*glPixelStoref)(unsigned pname, float param);
extern PACKAGE void __stdcall (*glPixelStorei)(unsigned pname, int param);
extern PACKAGE void __stdcall (*glPixelTransferf)(unsigned pname, float param);
extern PACKAGE void __stdcall (*glPixelTransferi)(unsigned pname, int param);
extern PACKAGE void __stdcall (*glPixelZoom)(float xfactor, float yfactor);
extern PACKAGE void __stdcall (*glPointSize)(float size);
extern PACKAGE void __stdcall (*glPolygonMode)(unsigned face, unsigned mode);
extern PACKAGE void __stdcall (*glPolygonOffset)(float factor, float units);
extern PACKAGE void __stdcall (*glPolygonStipple)(PGLubyte mask);
extern PACKAGE void __stdcall (*glPopAttrib)(void);
extern PACKAGE void __stdcall (*glPopClientAttrib)(void);
extern PACKAGE void __stdcall (*glPopMatrix)(void);
extern PACKAGE void __stdcall (*glPopName)(void);
extern PACKAGE void __stdcall (*glPrioritizeTextures)(int n, PGLuint textures, PGLclampf priorities);
extern PACKAGE void __stdcall (*glPushAttrib)(unsigned mask);
extern PACKAGE void __stdcall (*glPushClientAttrib)(unsigned mask);
extern PACKAGE void __stdcall (*glPushMatrix)(void);
extern PACKAGE void __stdcall (*glPushName)(unsigned name);
extern PACKAGE void __stdcall (*glRasterPos2d)(double x, double y);
extern PACKAGE void __stdcall (*glRasterPos2dv)(PGLdouble v);
extern PACKAGE void __stdcall (*glRasterPos2f)(float x, float y);
extern PACKAGE void __stdcall (*glRasterPos2fv)(PGLfloat v);
extern PACKAGE void __stdcall (*glRasterPos2i)(int x, int y);
extern PACKAGE void __stdcall (*glRasterPos2iv)(PGLint v);
extern PACKAGE void __stdcall (*glRasterPos2s)(PGLshort x, PGLshort y);
extern PACKAGE void __stdcall (*glRasterPos2sv)(PGLshort v);
extern PACKAGE void __stdcall (*glRasterPos3d)(double x, double y, double z);
extern PACKAGE void __stdcall (*glRasterPos3dv)(PGLdouble v);
extern PACKAGE void __stdcall (*glRasterPos3f)(float x, float y, float z);
extern PACKAGE void __stdcall (*glRasterPos3fv)(PGLfloat v);
extern PACKAGE void __stdcall (*glRasterPos3i)(int x, int y, int z);
extern PACKAGE void __stdcall (*glRasterPos3iv)(PGLint v);
extern PACKAGE void __stdcall (*glRasterPos3s)(short x, short y, short z);
extern PACKAGE void __stdcall (*glRasterPos3sv)(PGLshort v);
extern PACKAGE void __stdcall (*glRasterPos4d)(double x, double y, double z, double w);
extern PACKAGE void __stdcall (*glRasterPos4dv)(PGLdouble v);
extern PACKAGE void __stdcall (*glRasterPos4f)(float x, float y, float z, float w);
extern PACKAGE void __stdcall (*glRasterPos4fv)(PGLfloat v);
extern PACKAGE void __stdcall (*glRasterPos4i)(int x, int y, int z, int w);
extern PACKAGE void __stdcall (*glRasterPos4iv)(PGLint v);
extern PACKAGE void __stdcall (*glRasterPos4s)(short x, short y, short z, short w);
extern PACKAGE void __stdcall (*glRasterPos4sv)(PGLshort v);
extern PACKAGE void __stdcall (*glReadBuffer)(unsigned mode);
extern PACKAGE void __stdcall (*glReadPixels)(int x, int y, int width, int height, unsigned format, unsigned atype, void * pixels);
extern PACKAGE void __stdcall (*glRectd)(double x1, double y1, double x2, double y2);
extern PACKAGE void __stdcall (*glRectdv)(PGLdouble v1, PGLdouble v2);
extern PACKAGE void __stdcall (*glRectf)(float x1, float y1, float x2, float y2);
extern PACKAGE void __stdcall (*glRectfv)(PGLfloat v1, PGLfloat v2);
extern PACKAGE void __stdcall (*glRecti)(int x1, int y1, int x2, int y2);
extern PACKAGE void __stdcall (*glRectiv)(PGLint v1, PGLint v2);
extern PACKAGE void __stdcall (*glRects)(short x1, short y1, short x2, short y2);
extern PACKAGE void __stdcall (*glRectsv)(PGLshort v1, PGLshort v2);
extern PACKAGE int __stdcall (*glRenderMode)(unsigned mode);
extern PACKAGE void __stdcall (*glRotated)(double angle, double x, double y, double z);
extern PACKAGE void __stdcall (*glRotatef)(float angle, float x, float y, float z);
extern PACKAGE void __stdcall (*glScaled)(double x, double y, double z);
extern PACKAGE void __stdcall (*glScalef)(float x, float y, float z);
extern PACKAGE void __stdcall (*glScissor)(int x, int y, int width, int height);
extern PACKAGE void __stdcall (*glSelectBuffer)(int size, PGLuint buffer);
extern PACKAGE void __stdcall (*glShadeModel)(unsigned mode);
extern PACKAGE void __stdcall (*glStencilFunc)(unsigned func, int ref, unsigned mask);
extern PACKAGE void __stdcall (*glStencilMask)(unsigned mask);
extern PACKAGE void __stdcall (*glStencilOp)(unsigned fail, unsigned zfail, unsigned zpass);
extern PACKAGE void __stdcall (*glTexCoord1d)(double s);
extern PACKAGE void __stdcall (*glTexCoord1dv)(PGLdouble v);
extern PACKAGE void __stdcall (*glTexCoord1f)(float s);
extern PACKAGE void __stdcall (*glTexCoord1fv)(PGLfloat v);
extern PACKAGE void __stdcall (*glTexCoord1i)(int s);
extern PACKAGE void __stdcall (*glTexCoord1iv)(PGLint v);
extern PACKAGE void __stdcall (*glTexCoord1s)(short s);
extern PACKAGE void __stdcall (*glTexCoord1sv)(PGLshort v);
extern PACKAGE void __stdcall (*glTexCoord2d)(double s, double t);
extern PACKAGE void __stdcall (*glTexCoord2dv)(PGLdouble v);
extern PACKAGE void __stdcall (*glTexCoord2f)(float s, float t);
extern PACKAGE void __stdcall (*glTexCoord2fv)(PGLfloat v);
extern PACKAGE void __stdcall (*glTexCoord2i)(int s, int t);
extern PACKAGE void __stdcall (*glTexCoord2iv)(PGLint v);
extern PACKAGE void __stdcall (*glTexCoord2s)(short s, short t);
extern PACKAGE void __stdcall (*glTexCoord2sv)(PGLshort v);
extern PACKAGE void __stdcall (*glTexCoord3d)(double s, double t, double r);
extern PACKAGE void __stdcall (*glTexCoord3dv)(PGLdouble v);
extern PACKAGE void __stdcall (*glTexCoord3f)(float s, float t, float r);
extern PACKAGE void __stdcall (*glTexCoord3fv)(PGLfloat v);
extern PACKAGE void __stdcall (*glTexCoord3i)(int s, int t, int r);
extern PACKAGE void __stdcall (*glTexCoord3iv)(PGLint v);
extern PACKAGE void __stdcall (*glTexCoord3s)(short s, short t, short r);
extern PACKAGE void __stdcall (*glTexCoord3sv)(PGLshort v);
extern PACKAGE void __stdcall (*glTexCoord4d)(double s, double t, double r, double q);
extern PACKAGE void __stdcall (*glTexCoord4dv)(PGLdouble v);
extern PACKAGE void __stdcall (*glTexCoord4f)(float s, float t, float r, float q);
extern PACKAGE void __stdcall (*glTexCoord4fv)(PGLfloat v);
extern PACKAGE void __stdcall (*glTexCoord4i)(int s, int t, int r, int q);
extern PACKAGE void __stdcall (*glTexCoord4iv)(PGLint v);
extern PACKAGE void __stdcall (*glTexCoord4s)(short s, short t, short r, short q);
extern PACKAGE void __stdcall (*glTexCoord4sv)(PGLshort v);
extern PACKAGE void __stdcall (*glTexCoordPointer)(int size, unsigned atype, int stride, void * data);
extern PACKAGE void __stdcall (*glTexEnvf)(unsigned target, unsigned pname, float param);
extern PACKAGE void __stdcall (*glTexEnvfv)(unsigned target, unsigned pname, PGLfloat params);
extern PACKAGE void __stdcall (*glTexEnvi)(unsigned target, unsigned pname, int param);
extern PACKAGE void __stdcall (*glTexEnviv)(unsigned target, unsigned pname, PGLint params);
extern PACKAGE void __stdcall (*glTexGend)(unsigned coord, unsigned pname, double param);
extern PACKAGE void __stdcall (*glTexGendv)(unsigned coord, unsigned pname, PGLdouble params);
extern PACKAGE void __stdcall (*glTexGenf)(unsigned coord, unsigned pname, float param);
extern PACKAGE void __stdcall (*glTexGenfv)(unsigned coord, unsigned pname, PGLfloat params);
extern PACKAGE void __stdcall (*glTexGeni)(unsigned coord, unsigned pname, int param);
extern PACKAGE void __stdcall (*glTexGeniv)(unsigned coord, unsigned pname, PGLint params);
extern PACKAGE void __stdcall (*glTexImage1D)(unsigned target, int level, int internalformat, int width, int border, unsigned format, unsigned atype, void * pixels);
extern PACKAGE void __stdcall (*glTexImage2D)(unsigned target, int level, int internalformat, int width, int height, int border, unsigned format, unsigned atype, void * Pixels);
extern PACKAGE void __stdcall (*glTexParameterf)(unsigned target, unsigned pname, float param);
extern PACKAGE void __stdcall (*glTexParameterfv)(unsigned target, unsigned pname, PGLfloat params);
extern PACKAGE void __stdcall (*glTexParameteri)(unsigned target, unsigned pname, int param);
extern PACKAGE void __stdcall (*glTexParameteriv)(unsigned target, unsigned pname, PGLint params);
extern PACKAGE void __stdcall (*glTexSubImage1D)(unsigned target, int level, int xoffset, int width, unsigned format, unsigned atype, void * pixels);
extern PACKAGE void __stdcall (*glTexSubImage2D)(unsigned target, int level, int xoffset, int yoffset, int width, int height, unsigned format, unsigned atype, void * pixels);
extern PACKAGE void __stdcall (*glTranslated)(double x, double y, double z);
extern PACKAGE void __stdcall (*glTranslatef)(float x, float y, float z);
extern PACKAGE void __stdcall (*glVertex2d)(double x, double y);
extern PACKAGE void __stdcall (*glVertex2dv)(PGLdouble v);
extern PACKAGE void __stdcall (*glVertex2f)(float x, float y);
extern PACKAGE void __stdcall (*glVertex2fv)(PGLfloat v);
extern PACKAGE void __stdcall (*glVertex2i)(int x, int y);
extern PACKAGE void __stdcall (*glVertex2iv)(PGLint v);
extern PACKAGE void __stdcall (*glVertex2s)(short x, short y);
extern PACKAGE void __stdcall (*glVertex2sv)(PGLshort v);
extern PACKAGE void __stdcall (*glVertex3d)(double x, double y, double z);
extern PACKAGE void __stdcall (*glVertex3dv)(PGLdouble v);
extern PACKAGE void __stdcall (*glVertex3f)(float x, float y, float z);
extern PACKAGE void __stdcall (*glVertex3fv)(PGLfloat v);
extern PACKAGE void __stdcall (*glVertex3i)(int x, int y, int z);
extern PACKAGE void __stdcall (*glVertex3iv)(PGLint v);
extern PACKAGE void __stdcall (*glVertex3s)(short x, short y, short z);
extern PACKAGE void __stdcall (*glVertex3sv)(PGLshort v);
extern PACKAGE void __stdcall (*glVertex4d)(double x, double y, double z, double w);
extern PACKAGE void __stdcall (*glVertex4dv)(PGLdouble v);
extern PACKAGE void __stdcall (*glVertex4f)(float x, float y, float z, float w);
extern PACKAGE void __stdcall (*glVertex4fv)(PGLfloat v);
extern PACKAGE void __stdcall (*glVertex4i)(int x, int y, int z, int w);
extern PACKAGE void __stdcall (*glVertex4iv)(PGLint v);
extern PACKAGE void __stdcall (*glVertex4s)(short x, short y, short z, short w);
extern PACKAGE void __stdcall (*glVertex4sv)(PGLshort v);
extern PACKAGE void __stdcall (*glVertexPointer)(int size, unsigned atype, int stride, void * data);
extern PACKAGE void __stdcall (*glViewport)(int x, int y, int width, int height);
extern PACKAGE void __stdcall (*glDrawRangeElements)(unsigned mode, unsigned Astart, unsigned Aend, int count, unsigned Atype, void * indices);
extern PACKAGE void __stdcall (*glTexImage3D)(unsigned target, int level, unsigned internalformat, int width, int height, int depth, int border, unsigned format, unsigned Atype, void * pixels);
extern PACKAGE void __stdcall (*glBlendColor)(float red, float green, float blue, float alpha);
extern PACKAGE void __stdcall (*glBlendEquation)(unsigned mode);
extern PACKAGE void __stdcall (*glColorSubTable)(unsigned target, int start, int count, unsigned format, unsigned Atype, void * data);
extern PACKAGE void __stdcall (*glCopyColorSubTable)(unsigned target, int start, int x, int y, int width);
extern PACKAGE void __stdcall (*glColorTable)(unsigned target, unsigned internalformat, int width, unsigned format, unsigned Atype, void * table);
extern PACKAGE void __stdcall (*glCopyColorTable)(unsigned target, unsigned internalformat, int x, int y, int width);
extern PACKAGE void __stdcall (*glColorTableParameteriv)(unsigned target, unsigned pname, PGLint params);
extern PACKAGE void __stdcall (*glColorTableParameterfv)(unsigned target, unsigned pname, PGLfloat params);
extern PACKAGE void __stdcall (*glGetColorTable)(unsigned target, unsigned format, unsigned Atype, void * table);
extern PACKAGE void __stdcall (*glGetColorTableParameteriv)(unsigned target, unsigned pname, PGLint params);
extern PACKAGE void __stdcall (*glGetColorTableParameterfv)(unsigned target, unsigned pname, PGLfloat params);
extern PACKAGE void __stdcall (*glConvolutionFilter1D)(unsigned target, unsigned internalformat, int width, unsigned format, unsigned Atype, void * image);
extern PACKAGE void __stdcall (*glConvolutionFilter2D)(unsigned target, unsigned internalformat, int width, int height, unsigned format, unsigned Atype, void * image);
extern PACKAGE void __stdcall (*glCopyConvolutionFilter1D)(unsigned target, unsigned internalformat, int x, int y, int width);
extern PACKAGE void __stdcall (*glCopyConvolutionFilter2D)(unsigned target, unsigned internalformat, int x, int y, int width, int height);
extern PACKAGE void __stdcall (*glGetConvolutionFilter)(unsigned target, unsigned internalformat, unsigned Atype, void * image);
extern PACKAGE void __stdcall (*glSeparableFilter2D)(unsigned target, unsigned internalformat, int width, int height, unsigned format, unsigned Atype, void * row, void * column);
extern PACKAGE void __stdcall (*glGetSeparableFilter)(unsigned target, unsigned format, unsigned Atype, void * row, void * column, void * span);
extern PACKAGE void __stdcall (*glConvolutionParameteri)(unsigned target, unsigned pname, int param);
extern PACKAGE void __stdcall (*glConvolutionParameteriv)(unsigned target, unsigned pname, PGLint params);
extern PACKAGE void __stdcall (*glConvolutionParameterf)(unsigned target, unsigned pname, float param);
extern PACKAGE void __stdcall (*glConvolutionParameterfv)(unsigned target, unsigned pname, PGLfloat params);
extern PACKAGE void __stdcall (*glGetConvolutionParameteriv)(unsigned target, unsigned pname, PGLint params);
extern PACKAGE void __stdcall (*glGetConvolutionParameterfv)(unsigned target, unsigned pname, PGLfloat params);
extern PACKAGE void __stdcall (*glHistogram)(unsigned target, int width, unsigned internalformat, Byte sink);
extern PACKAGE void __stdcall (*glResetHistogram)(unsigned target);
extern PACKAGE void __stdcall (*glGetHistogram)(unsigned target, Byte reset, unsigned format, unsigned Atype, void * values);
extern PACKAGE void __stdcall (*glGetHistogramParameteriv)(unsigned target, unsigned pname, PGLint params);
extern PACKAGE void __stdcall (*glGetHistogramParameterfv)(unsigned target, unsigned pname, PGLfloat params);
extern PACKAGE void __stdcall (*glMinmax)(unsigned target, unsigned internalformat, Byte sink);
extern PACKAGE void __stdcall (*glResetMinmax)(unsigned target);
extern PACKAGE void __stdcall (*glGetMinmax)(unsigned target, Byte reset, unsigned format, unsigned Atype, void * values);
extern PACKAGE void __stdcall (*glGetMinmaxParameteriv)(unsigned target, unsigned pname, PGLint params);
extern PACKAGE void __stdcall (*glGetMinmaxParameterfv)(unsigned target, unsigned pname, PGLfloat params);
extern PACKAGE PGLUQuadric __stdcall (*gluNewQuadric)(void);
extern PACKAGE char * __stdcall (*gluErrorString)(unsigned errCode);
extern PACKAGE char * __stdcall (*gluGetString)(unsigned name);
extern PACKAGE void __stdcall (*gluOrtho2D)(double left, double right, double bottom, double top);
extern PACKAGE void __stdcall (*gluPerspective)(double fovy, double aspect, double zNear, double zFar);
extern PACKAGE void __stdcall (*gluPickMatrix)(double x, double y, double width, double height, const int * viewport);
extern PACKAGE void __stdcall (*gluLookAt)(double eyex, double eyey, double eyez, double centerx, double centery, double centerz, double upx, double upy, double upz);
extern PACKAGE int __stdcall (*gluProject)(double objx, double objy, double objz, const double * modelMatrix, const double * projMatrix, const int * viewport, PGLdouble winx, PGLdouble winy, PGLdouble winz);
extern PACKAGE int __stdcall (*gluUnProject)(double winx, double winy, double winz, const double * modelMatrix, const double * projMatrix, const int * viewport, PGLdouble objx, PGLdouble objy, PGLdouble objz);
extern PACKAGE int __stdcall (*gluScaleImage)(unsigned format, int widthin, int heightin, unsigned typein, void * datain, int widthout, int heightout, unsigned typeout, void * dataout);
extern PACKAGE int __stdcall (*gluBuild1DMipmaps)(unsigned target, int components, int width, unsigned format, unsigned atype, void * data);
extern PACKAGE int __stdcall (*gluBuild2DMipmaps)(unsigned target, int components, int width, int height, unsigned format, unsigned atype, void * Data);
extern PACKAGE void __stdcall (*gluDeleteQuadric)(PGLUQuadric state);
extern PACKAGE void __stdcall (*gluQuadricNormals)(PGLUQuadric quadObject, unsigned normals);
extern PACKAGE void __stdcall (*gluQuadricTexture)(PGLUQuadric quadObject, Byte textureCoords);
extern PACKAGE void __stdcall (*gluQuadricOrientation)(PGLUQuadric quadObject, unsigned orientation);
extern PACKAGE void __stdcall (*gluQuadricDrawStyle)(PGLUQuadric quadObject, unsigned drawStyle);
extern PACKAGE void __stdcall (*gluCylinder)(PGLUQuadric quadObject, double baseRadius, double topRadius, double height, int slices, int stacks);
extern PACKAGE void __stdcall (*gluDisk)(PGLUQuadric quadObject, double innerRadius, double outerRadius, int slices, int loops);
extern PACKAGE void __stdcall (*gluPartialDisk)(PGLUQuadric quadObject, double innerRadius, double outerRadius, int slices, int loops, double startAngle, double sweepAngle);
extern PACKAGE void __stdcall (*gluSphere)(PGLUQuadric quadObject, double radius, int slices, int stacks);
extern PACKAGE void __stdcall (*gluQuadricCallback)(PGLUQuadric quadObject, unsigned which, TGLUQuadricErrorProc fn);
extern PACKAGE PGLUTesselator __stdcall (*gluNewTess)(void);
extern PACKAGE void __stdcall (*gluDeleteTess)(PGLUTesselator tess);
extern PACKAGE void __stdcall (*gluTessBeginPolygon)(PGLUTesselator tess, void * polygon_data);
extern PACKAGE void __stdcall (*gluTessBeginContour)(PGLUTesselator tess);
extern PACKAGE void __stdcall (*gluTessVertex)(PGLUTesselator tess, const double * coords, void * data);
extern PACKAGE void __stdcall (*gluTessEndContour)(PGLUTesselator tess);
extern PACKAGE void __stdcall (*gluTessEndPolygon)(PGLUTesselator tess);
extern PACKAGE void __stdcall (*gluTessProperty)(PGLUTesselator tess, unsigned which, double value);
extern PACKAGE void __stdcall (*gluTessNormal)(PGLUTesselator tess, double x, double y, double z);
extern PACKAGE void __stdcall (*gluTessCallback)(PGLUTesselator tess, unsigned which, void * fn);
extern PACKAGE void __stdcall (*gluGetTessProperty)(PGLUTesselator tess, unsigned which, PGLdouble value);
extern PACKAGE PGLUNurbs __stdcall (*gluNewNurbsRenderer)(void);
extern PACKAGE void __stdcall (*gluDeleteNurbsRenderer)(PGLUNurbs nobj);
extern PACKAGE void __stdcall (*gluBeginSurface)(PGLUNurbs nobj);
extern PACKAGE void __stdcall (*gluBeginCurve)(PGLUNurbs nobj);
extern PACKAGE void __stdcall (*gluEndCurve)(PGLUNurbs nobj);
extern PACKAGE void __stdcall (*gluEndSurface)(PGLUNurbs nobj);
extern PACKAGE void __stdcall (*gluBeginTrim)(PGLUNurbs nobj);
extern PACKAGE void __stdcall (*gluEndTrim)(PGLUNurbs nobj);
extern PACKAGE void __stdcall (*gluPwlCurve)(PGLUNurbs nobj, int count, PGLfloat points, int stride, unsigned atype);
extern PACKAGE void __stdcall (*gluNurbsCurve)(PGLUNurbs nobj, int nknots, PGLfloat knot, int stride, PGLfloat ctlarray, int order, unsigned atype);
extern PACKAGE void __stdcall (*gluNurbsSurface)(PGLUNurbs nobj, int sknot_count, PGLfloat sknot, int tknot_count, PGLfloat tknot, int s_stride, int t_stride, PGLfloat ctlarray, int sorder, int torder, unsigned atype);
extern PACKAGE void __stdcall (*gluLoadSamplingMatrices)(PGLUNurbs nobj, const float * modelMatrix, const float * projMatrix, const int * viewport);
extern PACKAGE void __stdcall (*gluNurbsProperty)(PGLUNurbs nobj, unsigned aproperty, float value);
extern PACKAGE void __stdcall (*gluGetNurbsProperty)(PGLUNurbs nobj, unsigned aproperty, PGLfloat value);
extern PACKAGE void __stdcall (*gluNurbsCallback)(PGLUNurbs nobj, unsigned which, TGLUNurbsErrorProc fn);
extern PACKAGE void __stdcall (*gluBeginPolygon)(PGLUTesselator tess);
extern PACKAGE void __stdcall (*gluNextContour)(PGLUTesselator tess, unsigned atype);
extern PACKAGE void __stdcall (*gluEndPolygon)(PGLUTesselator tess);
extern PACKAGE BOOL __stdcall (*wglCopyContext)(HGLRC RC1, HGLRC RC2, unsigned p3);
extern PACKAGE HGLRC __stdcall (*wglCreateContext)(HDC DC);
extern PACKAGE HGLRC __stdcall (*wglCreateLayerContext)(HDC DC, int p2);
extern PACKAGE BOOL __stdcall (*wglDeleteContext)(HGLRC RC);
extern PACKAGE BOOL __stdcall (*wglDescribeLayerPlane)(HDC p1, int p2, int p3, unsigned p4, PLayerPlaneDescriptor p5);
extern PACKAGE HGLRC __stdcall (*wglGetCurrentContext)(void);
extern PACKAGE HDC __stdcall (*wglGetCurrentDC)(void);
extern PACKAGE int __stdcall (*wglGetLayerPaletteEntries)(HDC p1, int p2, int p3, int p4, void * pcr);
extern PACKAGE void * __stdcall (*wglGetProcAddress)(char * ProcName);
extern PACKAGE BOOL __stdcall (*wglMakeCurrent)(HDC DC, HGLRC p2);
extern PACKAGE BOOL __stdcall (*wglRealizeLayerPalette)(HDC p1, int p2, BOOL p3);
extern PACKAGE int __stdcall (*wglSetLayerPaletteEntries)(HDC p1, int p2, int p3, int p4, void * pcr);
extern PACKAGE BOOL __stdcall (*wglShareLists)(HGLRC p1, HGLRC p2);
extern PACKAGE BOOL __stdcall (*wglSwapLayerBuffers)(HDC p1, unsigned p2);
extern PACKAGE BOOL __stdcall (*wglUseFontBitmapsA)(HDC DC, unsigned p2, unsigned p3, unsigned p4);
extern PACKAGE BOOL __stdcall (*wglUseFontBitmapsW)(HDC DC, unsigned p2, unsigned p3, unsigned p4);
extern PACKAGE BOOL __stdcall (*wglUseFontBitmaps)(HDC DC, unsigned p2, unsigned p3, unsigned p4);
extern PACKAGE BOOL __stdcall (*wglUseFontOutlinesA)(HDC p1, unsigned p2, unsigned p3, unsigned p4, float p5, float p6, int p7, Windows::PGlyphMetricsFloat p8);
extern PACKAGE BOOL __stdcall (*wglUseFontOutlinesW)(HDC p1, unsigned p2, unsigned p3, unsigned p4, float p5, float p6, int p7, Windows::PGlyphMetricsFloat p8);
extern PACKAGE BOOL __stdcall (*wglUseFontOutlines)(HDC p1, unsigned p2, unsigned p3, unsigned p4, float p5, float p6, int p7, Windows::PGlyphMetricsFloat p8);
extern PACKAGE int __stdcall (*ChoosePixelFormat)(HDC DC, Windows::PPixelFormatDescriptor PFD);
extern PACKAGE BOOL __stdcall (*DescribePixelFormat)(HDC DC, int p2, unsigned p3, tagPIXELFORMATDESCRIPTOR &p4);
extern PACKAGE int __stdcall (*GetPixelFormat)(HDC DC);
extern PACKAGE BOOL __stdcall (*SetPixelFormat)(HDC DC, int p2, Windows::PPixelFormatDescriptor PFD);
extern PACKAGE BOOL __stdcall (*SwapBuffers)(HDC DC);
extern PACKAGE void __fastcall (*glAddSwapHintRectWIN)(int x, int y, int width, int height);
extern PACKAGE Byte __stdcall (*glAreTexturesResidentEXT)(int n, PGLuint textures, PGLboolean residences);
extern PACKAGE void __stdcall (*glArrayElementEXT)(int i);
extern PACKAGE void __stdcall (*glArrayElementArrayEXT)(unsigned mode, int count, void * pi);
extern PACKAGE void __stdcall (*glBeginSceneEXT)(void);
extern PACKAGE void __stdcall (*glBindTextureEXT)(unsigned target, unsigned texture);
extern PACKAGE void __stdcall (*glColorPointerEXT)(int size, unsigned atype, int stride, int count, void * data);
extern PACKAGE void __stdcall (*glColorTableEXT)(unsigned target, unsigned internalFormat, int width, unsigned format, unsigned atype, void * data);
extern PACKAGE void __stdcall (*glColorSubTableExt)(unsigned target, int start, int count, unsigned format, unsigned atype, void * data);
extern PACKAGE void __stdcall (*glCopyTexImage1DEXT)(unsigned target, int level, unsigned internalFormat, int x, int y, int width, int border);
extern PACKAGE void __stdcall (*glCopyTexSubImage1DEXT)(unsigned target, int level, int xoffset, int x, int y, int width);
extern PACKAGE void __stdcall (*glCopyTexImage2DEXT)(unsigned target, int level, unsigned internalFormat, int x, int y, int width, int height, int border);
extern PACKAGE void __stdcall (*glCopyTexSubImage2DEXT)(unsigned target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
extern PACKAGE void __stdcall (*glCopyTexSubImage3DEXT)(unsigned target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
extern PACKAGE void __stdcall (*glCullParameterfvEXT)(unsigned pname, PGLfloat params);
extern PACKAGE void __stdcall (*glCullParameterdvEXT)(unsigned pname, PGLdouble params);
extern PACKAGE void __stdcall (*glDeleteTexturesEXT)(int n, PGLuint textures);
extern PACKAGE void __stdcall (*glDrawArraysEXT)(unsigned mode, int first, int count);
extern PACKAGE void __stdcall (*glEdgeFlagPointerEXT)(int stride, int count, PGLboolean data);
extern PACKAGE void __stdcall (*glEndSceneEXT)(void);
extern PACKAGE void __stdcall (*glGenTexturesEXT)(int n, PGLuint textures);
extern PACKAGE void __stdcall (*glGetColorTableEXT)(unsigned target, unsigned format, unsigned atype, void * data);
extern PACKAGE void __stdcall (*glGetColorTablePameterfvEXT)(unsigned target, unsigned pname, void * params);
extern PACKAGE void __stdcall (*glGetColorTablePameterivEXT)(unsigned target, unsigned pname, void * params);
extern PACKAGE void __stdcall (*glGetPointervEXT)(unsigned pname, void * params);
extern PACKAGE void __stdcall (*glIndexFuncEXT)(unsigned func, float ref);
extern PACKAGE void __stdcall (*glIndexMaterialEXT)(unsigned face, unsigned mode);
extern PACKAGE void __stdcall (*glIndexPointerEXT)(unsigned atype, int stride, int count, void * data);
extern PACKAGE Byte __stdcall (*glIsTextureEXT)(unsigned texture);
extern PACKAGE void __stdcall (*glLockArraysEXT)(int first, int count);
extern PACKAGE void __stdcall (*glNormalPointerEXT)(unsigned atype, int stride, int count, void * data);
extern PACKAGE void __stdcall (*glPolygonOffsetEXT)(float factor, float bias);
extern PACKAGE void __stdcall (*glPrioritizeTexturesEXT)(int n, PGLuint textures, PGLclampf priorities);
extern PACKAGE void __stdcall (*glTexCoordPointerEXT)(int size, unsigned atype, int stride, int count, void * data);
extern PACKAGE void __stdcall (*glTexSubImage1DEXT)(unsigned target, int level, int xoffset, int width, unsigned format, unsigned Atype, void * pixels);
extern PACKAGE void __stdcall (*glTexSubImage2DEXT)(unsigned target, int level, int xoffset, int yoffset, int width, int height, unsigned format, unsigned Atype, void * pixels);
extern PACKAGE void __stdcall (*glTexSubImage3DEXT)(unsigned target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, unsigned format, unsigned Atype, void * pixels);
extern PACKAGE void __stdcall (*glUnlockArraysEXT)(void);
extern PACKAGE void __stdcall (*glVertexPointerExt)(int size, unsigned atype, int stride, int count, void * data);
extern PACKAGE void __fastcall ClearExtensions(void);
extern PACKAGE void __fastcall ReadExtensions(void);
extern PACKAGE void __fastcall ReadImplementationProperties(void);
extern PACKAGE HGLRC __fastcall CreateRenderingContext(HDC DC, TRCOptions Options, int ColorDepth, Byte StencilBits);
extern PACKAGE void __fastcall ActivateRenderingContext(HDC DC, HGLRC RC);
extern PACKAGE void __fastcall DeactivateRenderingContext(void);
extern PACKAGE void __fastcall DestroyRenderingContext(HGLRC RC);
extern PACKAGE void __fastcall CloseOpenGL(void);
extern PACKAGE bool __fastcall InitOpenGL(void);
extern PACKAGE bool __fastcall InitOpenGLFromLibrary(const AnsiString GL_Name, const AnsiString GLU_Name);

}	/* namespace Opengl2 */
using namespace Opengl2;
#pragma option pop	// -w-
#pragma option pop	// -Vx

#pragma delphiheader end.
//-- end unit ----------------------------------------------------------------
#endif	// OpenGL2
